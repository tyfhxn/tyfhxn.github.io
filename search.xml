<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>GitHub中30-Days-Of-Python学习记录</title>
      <link href="/2022/01/10/python30day/"/>
      <url>/2022/01/10/python30day/</url>
      
        <content type="html"><![CDATA[<p> GitHub项目地址</p><p><a href="https://github.com/Asabeneh/30-Days-Of-Python">https://github.com/Asabeneh/30-Days-Of-Python</a></p><h2 id="Day1-介绍"><a href="#Day1-介绍" class="headerlink" title="Day1-介绍"></a>Day1-介绍</h2><p>介绍python历史及安装操作</p><h3 id="1-注释"><a href="#1-注释" class="headerlink" title="1. 注释"></a>1. 注释</h3><ul><li>单行注释使用 ‘’#’’ 符号</li><li>多行注释：<code>&#39;&#39;&#39; &#39;&#39;&#39;或&quot;&quot;&quot; &quot;&quot;&quot;</code>   使用三个引号(注意：长字符串也可以用三引号来定义)<img src="https://gitee.com/t_d_l_h/blogimages/raw/master/img/6.png"></li></ul><h3 id="2-数据类型"><a href="#2-数据类型" class="headerlink" title="2. 数据类型"></a>2. 数据类型</h3><ol><li><p>数字型(Number)</p><ul><li><p>整数（正，负，零）；0，1，2，-2，-3</p></li><li><p>浮点数；1.1，3.4，-3.4，-5.54，0.0</p></li><li><p>复数；1+j，2+2j，-3+-2j</p></li></ul></li><li><p>字符串(Strings)</p><ul><li><p>单引号或双引号下的一个或多个字符的集合，如果不只一个句子则使用三引号</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token string">'abc'</span><span class="token string">"abc"</span><span class="token triple-quoted-string string">"""abv"""</span><span class="token triple-quoted-string string">'''abc'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>布尔值(Booleans)</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token boolean">True</span>：正确<span class="token boolean">False</span>：错误<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>列表(list)</p><ul><li><p>是一个有序集合，允许存储不同的数据类型，允许重复成员</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3.2</span><span class="token punctuation">,</span><span class="token number">45.1</span><span class="token punctuation">,</span><span class="token number">5.4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token number">9.3</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>字典(Dictionary)</p><ul><li><p>字典对象是键值对格式的无序数据的集合,不允许重复成员</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span>    <span class="token string">'sky'</span><span class="token punctuation">:</span><span class="token string">'blue'</span><span class="token punctuation">,</span>    <span class="token string">'cloudy'</span><span class="token punctuation">:</span><span class="token string">'max'</span><span class="token punctuation">,</span>    <span class="token string">'data'</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span>    <span class="token string">'status'</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span>    <span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">1.2</span><span class="token punctuation">,</span>    <span class="token string">'name'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'first_name'</span><span class="token punctuation">,</span><span class="token string">'last_name'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>元组(Tuple)</p><ul><li><p>存储不同数据类型的有序集合，<strong>元组一旦创建不可修改</strong>，允许重复成员</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>集合(Set)</p><ul><li><p>类似于数学定义上的集合，拥有，唯一性，无序性，确定性</p></li><li><p>只能存储不可变数据类型，如整数，浮点数，字符串，元组等，无法存储列表，字典等可变类型</p></li><li><p>因为集合是无序的，所以无法使用下标的方式进行索引，只能通过循环的方式进行读取</p></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">&#125;</span>空集合的定义方式：a<span class="token operator">=</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>==数据类型的检测使用python自带的<code>type()</code>函数==</li></ul></li></ol><h3 id="3-数据类型强制转换"><a href="#3-数据类型强制转换" class="headerlink" title="3. 数据类型强制转换"></a>3. 数据类型强制转换</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Day2-变量，内置函数"><a href="#Day2-变量，内置函数" class="headerlink" title="Day2-变量，内置函数"></a>Day2-变量，内置函数</h2><h3 id="1-内置函数"><a href="#1-内置函数" class="headerlink" title="1. 内置函数"></a>1. 内置函数</h3><p>内置函数全局可用，无需导入或配置，常用内置函数如下</p><p><img src="https://gitee.com/t_d_l_h/blogimages/raw/master/img/7.png"></p><h3 id="2-变量"><a href="#2-变量" class="headerlink" title="2. 变量"></a>2. 变量</h3><ol><li><p>变量的作用是将数据暂存在内存中</p></li><li><p>变量命名规则</p><ul><li>必须以字母或下划线开头</li><li>不能以数字开头</li><li>只能包含字母数字和下划线（A-z、0-9、_）</li><li>变量名区分大小写</li></ul></li><li><p>python标准的命名法是“蛇形命名法”，即多个单词之间用 ’ _ ‘ 分割</p></li><li><p>可以在一行中同时声明多个变量</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h2 id="Day3-运算符"><a href="#Day3-运算符" class="headerlink" title="Day3-运算符"></a>Day3-运算符</h2><h3 id="1-赋值运算符"><a href="#1-赋值运算符" class="headerlink" title="1. 赋值运算符"></a>1. 赋值运算符</h3><p><img src="https://gitee.com/t_d_l_h/blogimages/raw/master/img/8.png"></p><h3 id="2-算术运算符"><a href="#2-算术运算符" class="headerlink" title="2. 算术运算符"></a>2. 算术运算符</h3><p><img src="https://gitee.com/t_d_l_h/blogimages/raw/master/img/9.png"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Arithmetic Operations in Python</span><span class="token comment"># Integers</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Addition: '</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span>        <span class="token comment"># 3</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Subtraction: '</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>     <span class="token comment"># 1</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Multiplication: '</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># 6</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'Division: '</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>       <span class="token comment"># 2.0  Division in Python gives floating number</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Division: '</span><span class="token punctuation">,</span> <span class="token number">6</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>        <span class="token comment"># 3.0         </span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Division: '</span><span class="token punctuation">,</span> <span class="token number">7</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>        <span class="token comment"># 3.5</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Division without the remainder: '</span><span class="token punctuation">,</span> <span class="token number">7</span> <span class="token operator">//</span> <span class="token number">2</span><span class="token punctuation">)</span>   <span class="token comment"># 3,  gives without the floating number or without the remaining</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'Division without the remainder: '</span><span class="token punctuation">,</span><span class="token number">7</span> <span class="token operator">//</span> <span class="token number">3</span><span class="token punctuation">)</span>   <span class="token comment"># 2</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Modulus: '</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span>         <span class="token comment"># 1, Gives the remainder</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Exponentiation: '</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">**</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># 9 it means 2 * 2 * 2</span><span class="token comment"># Floating numbers</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Floating Point Number, PI'</span><span class="token punctuation">,</span> <span class="token number">3.14</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Floating Point Number, gravity'</span><span class="token punctuation">,</span> <span class="token number">9.81</span><span class="token punctuation">)</span><span class="token comment"># Complex numbers</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Complex number: '</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1j</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Multiplying complex numbers: '</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1j</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token number">1j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-比较运算符"><a href="#3-比较运算符" class="headerlink" title="3. 比较运算符"></a>3. 比较运算符</h3><p><img src="https://gitee.com/t_d_l_h/blogimages/raw/master/img/10.png"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">></span> <span class="token number">2</span><span class="token punctuation">)</span>     <span class="token comment"># True, because 3 is greater than 2</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">>=</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token comment"># True, because 3 is greater than 2</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span>     <span class="token comment"># False,  because 3 is greater than 2</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span>     <span class="token comment"># True, because 2 is less than 3</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">)</span>    <span class="token comment"># True, because 2 is less than 3</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token comment"># False, because 3 is not equal to 2</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token comment"># True, because 3 is not equal to 2</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">'mango'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">'avocado'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># False</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">'mango'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">'avocado'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># True</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">'mango'</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">'avocado'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># True</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">'milk'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">'meat'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment"># False</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">'milk'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">'meat'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment"># True</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">'tomato'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">'potato'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># True</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">'python'</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">'dragon'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># False</span><span class="token comment"># Comparing something gives either a True or False</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'True == True: '</span><span class="token punctuation">,</span> <span class="token boolean">True</span> <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'True == False: '</span><span class="token punctuation">,</span> <span class="token boolean">True</span> <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'False == False:'</span><span class="token punctuation">,</span> <span class="token boolean">False</span> <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>is 如果两个变量是同一个对象，返回true</li><li>is not 如果两个变量不是同一个对象，返回true</li><li>in  如果查询的列表包含某个项目，返回true</li><li>not in 如果查询的列表没有包含某个项目，返回true</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'1 is 1'</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">is</span> <span class="token number">1</span><span class="token punctuation">)</span>                   <span class="token comment"># True - because the data values are the same</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'1 is not 2'</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token number">2</span><span class="token punctuation">)</span>           <span class="token comment"># True - because 1 is not 2</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A in Asabeneh'</span><span class="token punctuation">,</span> <span class="token string">'A'</span> <span class="token keyword">in</span> <span class="token string">'Asabeneh'</span><span class="token punctuation">)</span> <span class="token comment"># True - A found in the string</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'B in Asabeneh'</span><span class="token punctuation">,</span> <span class="token string">'B'</span> <span class="token keyword">in</span> <span class="token string">'Asabeneh'</span><span class="token punctuation">)</span> <span class="token comment"># False - there is no uppercase B</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'coding'</span> <span class="token keyword">in</span> <span class="token string">'coding for all'</span><span class="token punctuation">)</span> <span class="token comment"># True - because coding for all has the word coding</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'a in an:'</span><span class="token punctuation">,</span> <span class="token string">'a'</span> <span class="token keyword">in</span> <span class="token string">'an'</span><span class="token punctuation">)</span>      <span class="token comment"># True</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'4 is 2 ** 2:'</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token keyword">is</span> <span class="token number">2</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span>   <span class="token comment"># True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-逻辑运算符"><a href="#4-逻辑运算符" class="headerlink" title="4. 逻辑运算符"></a>4. 逻辑运算符</h3><p><img src="https://gitee.com/t_d_l_h/blogimages/raw/master/img/11.png"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">></span> <span class="token number">2</span> <span class="token keyword">and</span> <span class="token number">4</span> <span class="token operator">></span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># True - because both statements are true</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">></span> <span class="token number">2</span> <span class="token keyword">and</span> <span class="token number">4</span> <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># False - because the second statement is false</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token keyword">and</span> <span class="token number">4</span> <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># False - because both statements are false</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'True and True: '</span><span class="token punctuation">,</span> <span class="token boolean">True</span> <span class="token keyword">and</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">></span> <span class="token number">2</span> <span class="token keyword">or</span> <span class="token number">4</span> <span class="token operator">></span> <span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># True - because both statements are true</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">></span> <span class="token number">2</span> <span class="token keyword">or</span> <span class="token number">4</span> <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># True - because one of the statements is true</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token keyword">or</span> <span class="token number">4</span> <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># False - because both statements are false</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'True or False:'</span><span class="token punctuation">,</span> <span class="token boolean">True</span> <span class="token keyword">or</span> <span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">not</span> <span class="token number">3</span> <span class="token operator">></span> <span class="token number">2</span><span class="token punctuation">)</span>     <span class="token comment"># False - because 3 > 2 is true, then not True gives False</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">not</span> <span class="token boolean">True</span><span class="token punctuation">)</span>      <span class="token comment"># False - Negation, the not operator turns true to false</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">not</span> <span class="token boolean">False</span><span class="token punctuation">)</span>     <span class="token comment"># True</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">not</span> <span class="token keyword">not</span> <span class="token boolean">True</span><span class="token punctuation">)</span>  <span class="token comment"># True</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">not</span> <span class="token keyword">not</span> <span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token comment"># False</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Day4-字符串"><a href="#Day4-字符串" class="headerlink" title="Day4-字符串"></a>Day4-字符串</h2><h3 id="1-创建字符串"><a href="#1-创建字符串" class="headerlink" title="1. 创建字符串"></a>1. 创建字符串</h3><p>文本是字符串数据类型，任何以文本形式写入的数据类型都是字符串。</p><p>单、双、三引号下的任何数据都是字符串</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span><span class="token string">'a'</span>b<span class="token operator">=</span><span class="token string">"b"</span>c<span class="token operator">=</span><span class="token triple-quoted-string string">"""c"""</span>d<span class="token operator">=</span><span class="token triple-quoted-string string">'''d'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-字符串连接"><a href="#2-字符串连接" class="headerlink" title="2. 字符串连接"></a>2. 字符串连接</h3><p>使用“+”字符进行连接</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span><span class="token string">'a'</span>b<span class="token operator">=</span><span class="token string">'b'</span>c<span class="token operator">=</span>a<span class="token operator">+</span>b<span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>  <span class="token comment">#输出“ab”</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-字符串中的转义字符"><a href="#3-字符串中的转义字符" class="headerlink" title="3. 字符串中的转义字符"></a>3. 字符串中的转义字符</h3><p>在python和其他编程语言中，\ 后面跟一个字符就是转义字符</p><ul><li>\n   换行</li><li>\t    制表符（八个空格）</li><li>\\    反斜杠</li><li>\‘    单引号</li><li>\“    双引号</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'I hope everyone is enjoying the Python Challenge.\nAre you ?'</span><span class="token punctuation">)</span> <span class="token comment"># line break</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Days\tTopics\tExercises'</span><span class="token punctuation">)</span> <span class="token comment"># adding tab space or 4 spaces </span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Day 1\t3\t5'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Day 2\t3\t5'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Day 3\t3\t5'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Day 4\t3\t5'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'This is a backslash  symbol (\\)'</span><span class="token punctuation">)</span> <span class="token comment"># To write a backslash</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'In every programming language it starts with \"Hello, World!\"'</span><span class="token punctuation">)</span> <span class="token comment"># to write a double quote inside a single quote</span><span class="token comment"># output</span>I hope every one <span class="token keyword">is</span> enjoying the Python Challenge<span class="token punctuation">.</span>Are you ?DaysTopicsExercisesDay <span class="token number">1</span><span class="token number">5</span>    <span class="token number">5</span>Day <span class="token number">2</span><span class="token number">6</span>    <span class="token number">20</span>Day <span class="token number">3</span><span class="token number">5</span>    <span class="token number">23</span>Day <span class="token number">4</span><span class="token number">1</span>    <span class="token number">35</span>This <span class="token keyword">is</span> a backslash  symbol <span class="token punctuation">(</span>\<span class="token punctuation">)</span>In every programming language it starts <span class="token keyword">with</span> <span class="token string">"Hello, World!"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-字符串格式"><a href="#4-字符串格式" class="headerlink" title="4. 字符串格式"></a>4. 字符串格式</h3><p>python中有多种格式化字符串的方法</p><ol><li><p>旧字符串格式</p><ul><li><p>“%”运算符用于格式化一组包含在“元组”中的变量以及格式化字符串，其中包含普通文本和“参数说明符”，特殊符号，如“%s”,”%d”,”%f”,”%.num of”  官方文档：<a href="https://python-reference.readthedocs.io/en/latest/docs/str/formatting.html">https://python-reference.readthedocs.io/en/latest/docs/str/formatting.html</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Strings only</span>first_name <span class="token operator">=</span> <span class="token string">'Asabeneh'</span>last_name <span class="token operator">=</span> <span class="token string">'Yetayeh'</span>language <span class="token operator">=</span> <span class="token string">'Python'</span>formated_string <span class="token operator">=</span> <span class="token string">'I am %s %s. I teach %s'</span> <span class="token operator">%</span><span class="token punctuation">(</span>first_name<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> language<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>formated_string<span class="token punctuation">)</span><span class="token comment"># Strings  and numbers</span>radius <span class="token operator">=</span> <span class="token number">10</span>pi <span class="token operator">=</span> <span class="token number">3.14</span>area <span class="token operator">=</span> pi <span class="token operator">*</span> radius <span class="token operator">**</span> <span class="token number">2</span>formated_string <span class="token operator">=</span> <span class="token string">'The area of circle with a radius %d is %.2f.'</span> <span class="token operator">%</span><span class="token punctuation">(</span>radius<span class="token punctuation">,</span> area<span class="token punctuation">)</span> <span class="token comment"># 2 refers the 2 significant digits after the point</span>python_libraries <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Django'</span><span class="token punctuation">,</span> <span class="token string">'Flask'</span><span class="token punctuation">,</span> <span class="token string">'NumPy'</span><span class="token punctuation">,</span> <span class="token string">'Matplotlib'</span><span class="token punctuation">,</span><span class="token string">'Pandas'</span><span class="token punctuation">]</span>formated_string <span class="token operator">=</span> <span class="token string">'The following are python libraries:%s'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>python_libraries<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>formated_string<span class="token punctuation">)</span> <span class="token comment"># "The following are python libraries:['Django', 'Flask', 'NumPy', 'Matplotlib','Pandas']"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>新字符串格式化（python3中引入）</p><ul><li><p>使用format</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">first_name <span class="token operator">=</span> <span class="token string">'Asabeneh'</span>last_name <span class="token operator">=</span> <span class="token string">'Yetayeh'</span>language <span class="token operator">=</span> <span class="token string">'Python'</span>formated_string <span class="token operator">=</span> <span class="token string">'I am &#123;&#125; &#123;&#125;. I teach &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>first_name<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> language<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>formated_string<span class="token punctuation">)</span>a <span class="token operator">=</span> <span class="token number">4</span>b <span class="token operator">=</span> <span class="token number">3</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'&#123;&#125; + &#123;&#125; = &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'&#123;&#125; - &#123;&#125; = &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'&#123;&#125; * &#123;&#125; = &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a <span class="token operator">*</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'&#123;&#125; / &#123;&#125; = &#123;:.2f&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a <span class="token operator">/</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># limits it to two digits after decimal</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'&#123;&#125; % &#123;&#125; = &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a <span class="token operator">%</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'&#123;&#125; // &#123;&#125; = &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a <span class="token operator">//</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'&#123;&#125; ** &#123;&#125; = &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a <span class="token operator">**</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># output</span><span class="token number">4</span> <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">7</span><span class="token number">4</span> <span class="token operator">-</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token number">4</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">12</span><span class="token number">4</span> <span class="token operator">/</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">1.33</span><span class="token number">4</span> <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token number">4</span> <span class="token operator">//</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token number">4</span> <span class="token operator">**</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">64</span><span class="token comment"># Strings  and numbers</span>radius <span class="token operator">=</span> <span class="token number">10</span>pi <span class="token operator">=</span> <span class="token number">3.14</span>area <span class="token operator">=</span> pi <span class="token operator">*</span> radius <span class="token operator">**</span> <span class="token number">2</span>formated_string <span class="token operator">=</span> <span class="token string">'The area of a circle with a radius &#123;&#125; is &#123;:.2f&#125;.'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>radius<span class="token punctuation">,</span> area<span class="token punctuation">)</span> <span class="token comment"># 2 digits after decimal</span><span class="token keyword">print</span><span class="token punctuation">(</span>formated_string<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>“ f ”表达式（python3.6+新特性）</p><ul><li><p>参考以下文章：<a href="https://blog.csdn.net/whatday/article/details/106729795?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-1.pc_relevant_paycolumn_v2&amp;spm=1001.2101.3001.4242.2&amp;utm_relevant_index=4">https://blog.csdn.net/whatday/article/details/106729795?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-1.pc_relevant_paycolumn_v2&amp;spm=1001.2101.3001.4242.2&amp;utm_relevant_index=4</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token number">4</span>b <span class="token operator">=</span> <span class="token number">3</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>a<span class="token punctuation">&#125;</span></span><span class="token string"> + </span><span class="token interpolation"><span class="token punctuation">&#123;</span>b<span class="token punctuation">&#125;</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>a <span class="token operator">+</span>b<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>a<span class="token punctuation">&#125;</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token punctuation">&#123;</span>b<span class="token punctuation">&#125;</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>a <span class="token operator">-</span> b<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>a<span class="token punctuation">&#125;</span></span><span class="token string"> * </span><span class="token interpolation"><span class="token punctuation">&#123;</span>b<span class="token punctuation">&#125;</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>a <span class="token operator">*</span> b<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>a<span class="token punctuation">&#125;</span></span><span class="token string"> / </span><span class="token interpolation"><span class="token punctuation">&#123;</span>b<span class="token punctuation">&#125;</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>a <span class="token operator">/</span> b<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>a<span class="token punctuation">&#125;</span></span><span class="token string"> % </span><span class="token interpolation"><span class="token punctuation">&#123;</span>b<span class="token punctuation">&#125;</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>a <span class="token operator">%</span> b<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>a<span class="token punctuation">&#125;</span></span><span class="token string"> // </span><span class="token interpolation"><span class="token punctuation">&#123;</span>b<span class="token punctuation">&#125;</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>a <span class="token operator">//</span> b<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>a<span class="token punctuation">&#125;</span></span><span class="token string"> ** </span><span class="token interpolation"><span class="token punctuation">&#123;</span>b<span class="token punctuation">&#125;</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>a <span class="token operator">**</span> b<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token comment">#output</span><span class="token number">4</span> <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">7</span><span class="token number">4</span> <span class="token operator">-</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token number">4</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">12</span><span class="token number">4</span> <span class="token operator">/</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">1.33</span><span class="token number">4</span> <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token number">4</span> <span class="token operator">//</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token number">4</span> <span class="token operator">**</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">64</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ol><h3 id="5-python字符串作为字符序列"><a href="#5-python字符串作为字符序列" class="headerlink" title="5. python字符串作为字符序列"></a>5. python字符串作为字符序列</h3><ol><li><p>python中的字符串是由字符序列组合而成，并和其他有序对象序列（如列表和元组）共享基本访问方法</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">language <span class="token operator">=</span> <span class="token string">'Python'</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>e<span class="token punctuation">,</span>f <span class="token operator">=</span> language <span class="token comment"># 将序列字符解包成变量</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment"># P</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment"># y</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token comment"># t</span><span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token comment"># h</span><span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token comment"># o</span><span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span> <span class="token comment"># n</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>按索引访问字符串中的字符<img src="https://gitee.com/t_d_l_h/blogimages/raw/master/img/12.png"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">正索引language <span class="token operator">=</span> <span class="token string">'Python'</span>first_letter <span class="token operator">=</span> language<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>first_letter<span class="token punctuation">)</span> <span class="token comment"># P</span>second_letter <span class="token operator">=</span> language<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>second_letter<span class="token punctuation">)</span> <span class="token comment"># y</span>last_index <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>language<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>last_letter <span class="token operator">=</span> language<span class="token punctuation">[</span>last_index<span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>last_letter<span class="token punctuation">)</span> <span class="token comment"># n</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">负索引language <span class="token operator">=</span> <span class="token string">'Python'</span>last_letter <span class="token operator">=</span> language<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>last_letter<span class="token punctuation">)</span> <span class="token comment"># n</span>second_last <span class="token operator">=</span> language<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>second_last<span class="token punctuation">)</span> <span class="token comment"># o</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>切片</p><ul><li><p>用于分割字符串</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">language <span class="token operator">=</span> <span class="token string">'Python'</span>first_three <span class="token operator">=</span> language<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token comment"># starts at zero index and up to 3 but not include 3</span><span class="token keyword">print</span><span class="token punctuation">(</span>first_three<span class="token punctuation">)</span> <span class="token comment">#Pyt</span>last_three <span class="token operator">=</span> language<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>last_three<span class="token punctuation">)</span> <span class="token comment"># hon</span><span class="token comment"># Another way</span>last_three <span class="token operator">=</span> language<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>last_three<span class="token punctuation">)</span>   <span class="token comment"># hon</span>last_three <span class="token operator">=</span> language<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>last_three<span class="token punctuation">)</span>   <span class="token comment"># hon</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>字符串反转</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">greeting <span class="token operator">=</span> <span class="token string">'Hello, World!'</span><span class="token keyword">print</span><span class="token punctuation">(</span>greeting<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># !dlroW ,olleH</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>切片时跳过某些字符</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">language <span class="token operator">=</span> <span class="token string">'Python'</span>pto <span class="token operator">=</span> language<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment">#</span><span class="token keyword">print</span><span class="token punctuation">(</span>pto<span class="token punctuation">)</span> <span class="token comment"># Pto</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li></ol><h3 id="6-字符串方法"><a href="#6-字符串方法" class="headerlink" title="6. 字符串方法"></a>6. 字符串方法</h3><ul><li><p>capitalize()：将字符串的第一个字符转换为大写字母</p></li><li><p>count()：返回字符串中子字符串的出现次数，count(substring, start=.., end=..)。start 是计数的起始索引，end 是要计数的最后一个索引。</p></li><li><p>endswith()：检查字符串是否以指定的结尾结尾</p></li><li><p>expandtabs()：用空格替换制表符，默认制表符大小为8。它需要制表符大小参数</p></li><li><p>find()：返回子字符串第一次出现的索引，如果没有找到返回-1</p></li><li><p>rfind()：返回子串最后一次出现的索引，如果没有找到返回-1</p></li><li><p>index()：返回子字符串的最低索引，附加参数指示开始和结束索引（默认 0 和字符串长度 - 1）。如果未找到子字符串，则会引发 valueError。</p></li><li><p>rindex()：返回子字符串的最高索引，附加参数指示开始和结束索引（默认 0 和字符串长度 - 1）</p></li><li><p>isalnum()：检查字母数字字符</p></li><li><p>isalpha()：检查是否所有字符串元素都是字母字符（az 和 AZ）</p></li><li><p>isdecimal()：检查字符串中的所有字符是否都是十进制 (0-9)</p></li><li><p>isdigit()：检查字符串中的所有字符是否都是数字（0-9 和其他一些用于数字的 unicode 字符）</p></li><li><p>isnumeric()：检查字符串中的所有字符是否都是数字或数字相关（就像 isdigit()，只是接受更多的符号，比如 ½）</p></li><li><p>isidentifier()：检查一个有效的标识符——它检查一个字符串是否是一个有效的变量名</p></li><li><p>islower()：检查字符串中的所有字母字符是否都是小写的</p></li><li><p>isupper()：检查字符串中的所有字母字符是否都是大写的</p></li><li><p>join()：返回一个连接的字符串</p></li><li><p>strip()：从字符串的开头和结尾删除所有给定的字符</p></li><li><p>replace()：用给定的字符串替换子字符串</p></li><li><p>split()：拆分字符串，使用给定的字符串或空格作为分隔符</p></li><li><p>title()：返回标题大小写的字符串</p></li><li><p>swapcase()：将所有大写字符转换为小写，将所有小写字符转换为大写字符</p></li><li><p>startswith()：检查字符串是否以指定的字符串开头</p></li></ul><h2 id="Day5-列表"><a href="#Day5-列表" class="headerlink" title="Day5-列表"></a>Day5-列表</h2><h3 id="1-创建列表方法"><a href="#1-创建列表方法" class="headerlink" title="1. 创建列表方法"></a>1. 创建列表方法</h3><ol><li><p>使用list方法</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">#定义一个空列表</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>使用“ [] ”</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>   <span class="token comment">#定义一个空列表</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>非空列表</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>b<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>c<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>查询列表长度</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#列表的长度为列表中的元素个数</span>fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">]</span>                     <span class="token comment"># list of fruits</span>vegetables <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Tomato'</span><span class="token punctuation">,</span> <span class="token string">'Potato'</span><span class="token punctuation">,</span> <span class="token string">'Cabbage'</span><span class="token punctuation">,</span><span class="token string">'Onion'</span><span class="token punctuation">,</span> <span class="token string">'Carrot'</span><span class="token punctuation">]</span>      <span class="token comment"># list of vegetables</span>animal_products <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'milk'</span><span class="token punctuation">,</span> <span class="token string">'meat'</span><span class="token punctuation">,</span> <span class="token string">'butter'</span><span class="token punctuation">,</span> <span class="token string">'yoghurt'</span><span class="token punctuation">]</span>             <span class="token comment"># list of animal products</span>web_techs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'HTML'</span><span class="token punctuation">,</span> <span class="token string">'CSS'</span><span class="token punctuation">,</span> <span class="token string">'JS'</span><span class="token punctuation">,</span> <span class="token string">'React'</span><span class="token punctuation">,</span><span class="token string">'Redux'</span><span class="token punctuation">,</span> <span class="token string">'Node'</span><span class="token punctuation">,</span> <span class="token string">'MongDB'</span><span class="token punctuation">]</span> <span class="token comment"># list of web technologies</span>countries <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Finland'</span><span class="token punctuation">,</span> <span class="token string">'Estonia'</span><span class="token punctuation">,</span> <span class="token string">'Denmark'</span><span class="token punctuation">,</span> <span class="token string">'Sweden'</span><span class="token punctuation">,</span> <span class="token string">'Norway'</span><span class="token punctuation">]</span><span class="token comment"># Print the lists and its length</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Fruits:'</span><span class="token punctuation">,</span> fruits<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Number of fruits:'</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Vegetables:'</span><span class="token punctuation">,</span> vegetables<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Number of vegetables:'</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>vegetables<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Animal products:'</span><span class="token punctuation">,</span>animal_products<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Number of animal products:'</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>animal_products<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Web technologies:'</span><span class="token punctuation">,</span> web_techs<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Number of web technologies:'</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>web_techs<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Countries:'</span><span class="token punctuation">,</span> countries<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Number of countries:'</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>countries<span class="token punctuation">)</span><span class="token punctuation">)</span>outputFruits<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">]</span>Number of fruits<span class="token punctuation">:</span> <span class="token number">4</span>Vegetables<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'Tomato'</span><span class="token punctuation">,</span> <span class="token string">'Potato'</span><span class="token punctuation">,</span> <span class="token string">'Cabbage'</span><span class="token punctuation">,</span> <span class="token string">'Onion'</span><span class="token punctuation">,</span> <span class="token string">'Carrot'</span><span class="token punctuation">]</span>Number of vegetables<span class="token punctuation">:</span> <span class="token number">5</span>Animal products<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'milk'</span><span class="token punctuation">,</span> <span class="token string">'meat'</span><span class="token punctuation">,</span> <span class="token string">'butter'</span><span class="token punctuation">,</span> <span class="token string">'yoghurt'</span><span class="token punctuation">]</span>Number of animal products<span class="token punctuation">:</span> <span class="token number">4</span>Web technologies<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'HTML'</span><span class="token punctuation">,</span> <span class="token string">'CSS'</span><span class="token punctuation">,</span> <span class="token string">'JS'</span><span class="token punctuation">,</span> <span class="token string">'React'</span><span class="token punctuation">,</span> <span class="token string">'Redux'</span><span class="token punctuation">,</span> <span class="token string">'Node'</span><span class="token punctuation">,</span> <span class="token string">'MongDB'</span><span class="token punctuation">]</span>Number of web technologies<span class="token punctuation">:</span> <span class="token number">7</span>Countries<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'Finland'</span><span class="token punctuation">,</span> <span class="token string">'Estonia'</span><span class="token punctuation">,</span> <span class="token string">'Denmark'</span><span class="token punctuation">,</span> <span class="token string">'Sweden'</span><span class="token punctuation">,</span> <span class="token string">'Norway'</span><span class="token punctuation">]</span>Number of countries<span class="token punctuation">:</span> <span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="2-列表索引"><a href="#2-列表索引" class="headerlink" title="2.列表索引"></a>2.列表索引</h3><ol><li><p>正索引</p><p>正索引从0开始</p><p>下图表示列表索引开始的位置</p><p><img src="https://gitee.com/t_d_l_h/blogimages/raw/master/img/13.png"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">]</span>first_fruit <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment"># we are accessing the first item using its index</span><span class="token keyword">print</span><span class="token punctuation">(</span>first_fruit<span class="token punctuation">)</span>      <span class="token comment"># banana</span>second_fruit <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>second_fruit<span class="token punctuation">)</span>     <span class="token comment"># orange</span>last_fruit <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>last_fruit<span class="token punctuation">)</span> <span class="token comment"># lemon</span><span class="token comment"># Last index</span>last_index <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>last_fruit <span class="token operator">=</span> fruits<span class="token punctuation">[</span>last_index<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>反索引</p><p>负索引从-1开始，</p><p><img src="https://gitee.com/t_d_l_h/blogimages/raw/master/img/14.png"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">]</span>first_fruit <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span>last_fruit <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>second_last <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>first_fruit<span class="token punctuation">)</span>      <span class="token comment"># banana</span><span class="token keyword">print</span><span class="token punctuation">(</span>last_fruit<span class="token punctuation">)</span>       <span class="token comment"># lemon</span><span class="token keyword">print</span><span class="token punctuation">(</span>second_last<span class="token punctuation">)</span>      <span class="token comment"># mango</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>列表展开（list unpacking）</p><p>*+一个变量在python中表示返回一个列表</p><p>当使用列表展开时，出现类似于<code>*a或**a这样的变量后还有变量，则后面的变量的值的索引从-1开始</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># First Example</span>fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">,</span><span class="token string">'lime'</span><span class="token punctuation">,</span><span class="token string">'apple'</span><span class="token punctuation">]</span>first_fruit<span class="token punctuation">,</span> second_fruit<span class="token punctuation">,</span> third_fruit<span class="token punctuation">,</span> <span class="token operator">*</span>rest <span class="token operator">=</span> lst<span class="token keyword">print</span><span class="token punctuation">(</span>first_fruit<span class="token punctuation">)</span>     <span class="token comment"># banana</span><span class="token keyword">print</span><span class="token punctuation">(</span>second_fruit<span class="token punctuation">)</span>    <span class="token comment"># orange</span><span class="token keyword">print</span><span class="token punctuation">(</span>third_fruit<span class="token punctuation">)</span>     <span class="token comment"># mango</span><span class="token keyword">print</span><span class="token punctuation">(</span>rest<span class="token punctuation">)</span>           <span class="token comment"># ['lemon','lime','apple']</span><span class="token comment"># Second Example about unpacking list</span>first<span class="token punctuation">,</span> second<span class="token punctuation">,</span> third<span class="token punctuation">,</span><span class="token operator">*</span>rest<span class="token punctuation">,</span> tenth <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span>          <span class="token comment"># 1</span><span class="token keyword">print</span><span class="token punctuation">(</span>second<span class="token punctuation">)</span>         <span class="token comment"># 2</span><span class="token keyword">print</span><span class="token punctuation">(</span>third<span class="token punctuation">)</span>          <span class="token comment"># 3</span><span class="token keyword">print</span><span class="token punctuation">(</span>rest<span class="token punctuation">)</span>           <span class="token comment"># [4,5,6,7,8,9]</span><span class="token keyword">print</span><span class="token punctuation">(</span>tenth<span class="token punctuation">)</span>          <span class="token comment"># 10</span><span class="token comment"># Third Example about unpacking list</span>countries <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Germany'</span><span class="token punctuation">,</span> <span class="token string">'France'</span><span class="token punctuation">,</span><span class="token string">'Belgium'</span><span class="token punctuation">,</span><span class="token string">'Sweden'</span><span class="token punctuation">,</span><span class="token string">'Denmark'</span><span class="token punctuation">,</span><span class="token string">'Finland'</span><span class="token punctuation">,</span><span class="token string">'Norway'</span><span class="token punctuation">,</span><span class="token string">'Iceland'</span><span class="token punctuation">,</span><span class="token string">'Estonia'</span><span class="token punctuation">]</span>gr<span class="token punctuation">,</span> fr<span class="token punctuation">,</span> bg<span class="token punctuation">,</span> sw<span class="token punctuation">,</span> <span class="token operator">*</span>scandic<span class="token punctuation">,</span> es <span class="token operator">=</span> countries<span class="token keyword">print</span><span class="token punctuation">(</span>gr<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fr<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>bg<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sw<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>scandic<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>es<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="3-列表切片"><a href="#3-列表切片" class="headerlink" title="3. 列表切片"></a>3. 列表切片</h3><ol><li><p>正索引切片</p><p>通过指定开始和结束位置以及跨度值来进行切片，切片的结果为一个新的切片</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">]</span>all_fruits <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token comment"># it returns all the fruits</span><span class="token comment"># this will also give the same result as the one above</span>all_fruits <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment"># if we don't set where to stop it takes all the rest</span>orange_and_mango <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token comment"># it does not include the first index</span>orange_mango_lemon <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>orange_and_lemon <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment"># here we used a 3rd argument, step. It will take every 2cnd item - ['banana', 'mango']</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>负索引切片</p><p>开始位置为-1</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">]</span>all_fruits <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment"># it returns all the fruits</span>orange_and_mango <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment"># it does not include the last index,['orange', 'mango']</span>orange_mango_lemon <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment"># this will give starting from -3 to the end,['orange', 'mango', 'lemon']</span>reverse_fruits <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment"># a negative step will take the list in reverse order,['lemon', 'mango', 'orange', 'banana']</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="4-修改列表"><a href="#4-修改列表" class="headerlink" title="4. 修改列表"></a>4. 修改列表</h3><ul><li><p>通过索引来修改列表中的值</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">]</span>fruits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'avocado'</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>       <span class="token comment">#  ['avocado', 'orange', 'mango', 'lemon']</span>fruits<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'apple'</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>       <span class="token comment">#  ['avocado', 'apple', 'mango', 'lemon']</span>last_index <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>fruits<span class="token punctuation">[</span>last_index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'lime'</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>        <span class="token comment">#  ['avocado', 'apple', 'mango', 'lime']</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="5-检查列表中是否包含某个元素"><a href="#5-检查列表中是否包含某个元素" class="headerlink" title="5. 检查列表中是否包含某个元素"></a>5. 检查列表中是否包含某个元素</h3><ul><li><p>通过“ in ”运算符检查某个值是否是列表成员</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">]</span>does_exist <span class="token operator">=</span> <span class="token string">'banana'</span> <span class="token keyword">in</span> fruits<span class="token keyword">print</span><span class="token punctuation">(</span>does_exist<span class="token punctuation">)</span>  <span class="token comment"># True</span>does_exist <span class="token operator">=</span> <span class="token string">'lime'</span> <span class="token keyword">in</span> fruits<span class="token keyword">print</span><span class="token punctuation">(</span>does_exist<span class="token punctuation">)</span>  <span class="token comment"># False</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="6-添加元素到列表"><a href="#6-添加元素到列表" class="headerlink" title="6. 添加元素到列表"></a>6. 添加元素到列表</h3><ol><li><p>使用append，会添加到现有列表的尾部</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span>lst <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span>lst<span class="token punctuation">.</span>append<span class="token punctuation">(</span>item<span class="token punctuation">)</span>fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">]</span>fruits<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'apple'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>           <span class="token comment"># ['banana', 'orange', 'mango', 'lemon','apple']</span>fruits<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'lime'</span><span class="token punctuation">)</span>   <span class="token comment"># ['banana', 'orange', 'mango', 'lemon','apple','lime']</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>insert()</code>方法插入数据</p><p>在列表的指定索引处插入单个数据，同时从原本索引到结尾的数据右移一个位置</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax语法</span>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'item1'</span><span class="token punctuation">,</span> <span class="token string">'item2'</span><span class="token punctuation">]</span>lst<span class="token punctuation">.</span>insert<span class="token punctuation">(</span>index<span class="token punctuation">,</span> item<span class="token punctuation">)</span>fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">]</span>fruits<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'apple'</span><span class="token punctuation">)</span> <span class="token comment"># insert apple between orange and mango</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>           <span class="token comment"># ['banana', 'orange', 'apple', 'mango','lemon']</span>fruits<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'lime'</span><span class="token punctuation">)</span>   <span class="token comment"># ['banana', 'orange', 'apple', 'lime', 'mango', 'lemon']</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="7-从列表中删除数据"><a href="#7-从列表中删除数据" class="headerlink" title="7. 从列表中删除数据"></a>7. 从列表中删除数据</h3><ol><li><p>使用<code>remove()</code>方法</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'item1'</span><span class="token punctuation">,</span> <span class="token string">'item2'</span><span class="token punctuation">]</span>lst<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>item<span class="token punctuation">)</span>fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">,</span> <span class="token string">'banana'</span><span class="token punctuation">]</span>fruits<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">'banana'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>  <span class="token comment"># ['orange', 'mango', 'lemon', 'banana'] - this method removes the first occurrence of the item in the list</span>fruits<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">'lemon'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>  <span class="token comment"># ['orange', 'mango', 'banana']</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用<code>pop()</code>方法</p><p>通过指定索引来进行删除，如果未指定索引则删除最后一项</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'item1'</span><span class="token punctuation">,</span> <span class="token string">'item2'</span><span class="token punctuation">]</span>lst<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token comment"># last item</span>lst<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>index<span class="token punctuation">)</span>fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">]</span>fruits<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>       <span class="token comment"># ['banana', 'orange', 'mango']</span>fruits<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>       <span class="token comment"># ['orange', 'mango']</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用<code>del()</code>方法</p><p>可以删除指定的索引，也可以删除指定的索引范围，还可以完全删除列表</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'item1'</span><span class="token punctuation">,</span> <span class="token string">'item2'</span><span class="token punctuation">]</span><span class="token keyword">del</span> lst<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token comment"># only a single item</span><span class="token keyword">del</span> lst        <span class="token comment"># to delete the list completely</span>fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">,</span> <span class="token string">'kiwi'</span><span class="token punctuation">,</span> <span class="token string">'lime'</span><span class="token punctuation">]</span><span class="token keyword">del</span> fruits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>       <span class="token comment"># ['orange', 'mango', 'lemon', 'kiwi', 'lime']</span><span class="token keyword">del</span> fruits<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>       <span class="token comment"># ['orange', 'lemon', 'kiwi', 'lime']</span><span class="token keyword">del</span> fruits<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span>     <span class="token comment"># this deletes items between given indexes, so it does not delete the item with index 3!</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>       <span class="token comment"># ['orange', 'lime']</span><span class="token keyword">del</span> fruits<span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>       <span class="token comment"># This should give: NameError: name 'fruits' is not defined</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用<code>clear()</code>方法</p><p>清空列表</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'item1'</span><span class="token punctuation">,</span> <span class="token string">'item2'</span><span class="token punctuation">]</span>lst<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">]</span>fruits<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>       <span class="token comment"># []</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="8-列表拼接"><a href="#8-列表拼接" class="headerlink" title="8. 列表拼接"></a>8. 列表拼接</h3><ol><li><p>“ + ”拼接</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span>list3 <span class="token operator">=</span> list1 <span class="token operator">+</span> list2positive_numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>zero <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>negative_numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>integers <span class="token operator">=</span> negative_numbers <span class="token operator">+</span> zero <span class="token operator">+</span> positive_numbers<span class="token keyword">print</span><span class="token punctuation">(</span>integers<span class="token punctuation">)</span> <span class="token comment"># [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]</span>fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">]</span>vegetables <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Tomato'</span><span class="token punctuation">,</span> <span class="token string">'Potato'</span><span class="token punctuation">,</span> <span class="token string">'Cabbage'</span><span class="token punctuation">,</span> <span class="token string">'Onion'</span><span class="token punctuation">,</span> <span class="token string">'Carrot'</span><span class="token punctuation">]</span>fruits_and_vegetables <span class="token operator">=</span> fruits <span class="token operator">+</span> vegetables<span class="token keyword">print</span><span class="token punctuation">(</span>fruits_and_vegetables <span class="token punctuation">)</span> <span class="token comment"># ['banana', 'orange', 'mango', 'lemon', 'Tomato', 'Potato', 'Cabbage', 'Onion', 'Carrot']</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>extend()</code>方法拼接</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span>list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'item1'</span><span class="token punctuation">,</span> <span class="token string">'item2'</span><span class="token punctuation">]</span>list2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'item3'</span><span class="token punctuation">,</span> <span class="token string">'item4'</span><span class="token punctuation">,</span> <span class="token string">'item5'</span><span class="token punctuation">]</span>list1<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>list2<span class="token punctuation">)</span>num1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>num2<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>num1<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>num2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Numbers:'</span><span class="token punctuation">,</span> num1<span class="token punctuation">)</span> <span class="token comment"># Numbers: [0, 1, 2, 3, 4, 5, 6]</span>negative_numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>positive_numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>zero <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>negative_numbers<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>zero<span class="token punctuation">)</span>negative_numbers<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>positive_numbers<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Integers:'</span><span class="token punctuation">,</span> negative_numbers<span class="token punctuation">)</span> <span class="token comment"># Integers: [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]</span>fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">]</span>vegetables <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Tomato'</span><span class="token punctuation">,</span> <span class="token string">'Potato'</span><span class="token punctuation">,</span> <span class="token string">'Cabbage'</span><span class="token punctuation">,</span> <span class="token string">'Onion'</span><span class="token punctuation">,</span> <span class="token string">'Carrot'</span><span class="token punctuation">]</span>fruits<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>vegetables<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Fruits and vegetables:'</span><span class="token punctuation">,</span> fruits <span class="token punctuation">)</span> <span class="token comment"># Fruits and vegetables: ['banana', 'orange', 'mango', 'lemon', 'Tomato', 'Potato', 'Cabbage', 'Onion', 'Carrot']</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="9-计算列表中的项目"><a href="#9-计算列表中的项目" class="headerlink" title="9. 计算列表中的项目"></a>9. 计算列表中的项目</h3><ul><li><p><code>count()</code>方法返回某一个数据在列表中出现的次数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'item1'</span><span class="token punctuation">,</span> <span class="token string">'item2'</span><span class="token punctuation">]</span>lst<span class="token punctuation">.</span>count<span class="token punctuation">(</span>item<span class="token punctuation">)</span>fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'orange'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 1</span>ages <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>ages<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">)</span>           <span class="token comment"># 3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="10-查找列表中某个数据对应的索引下标"><a href="#10-查找列表中某个数据对应的索引下标" class="headerlink" title="10. 查找列表中某个数据对应的索引下标"></a>10. 查找列表中某个数据对应的索引下标</h3><ul><li><p><code>index()</code>方法返回列表中的索引</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'item1'</span><span class="token punctuation">,</span> <span class="token string">'item2'</span><span class="token punctuation">]</span>lst<span class="token punctuation">.</span>index<span class="token punctuation">(</span>item<span class="token punctuation">)</span>fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">'orange'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 1</span>ages <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>ages<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">)</span>           <span class="token comment"># 2, the first occurrence</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="11-反转列表"><a href="#11-反转列表" class="headerlink" title="11. 反转列表"></a>11. 反转列表</h3><ul><li><p><code>reverse()</code>方法反转列表顺序</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'item1'</span><span class="token punctuation">,</span> <span class="token string">'item2'</span><span class="token punctuation">]</span>lst<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span>fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">]</span>fruits<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span> <span class="token comment"># ['lemon', 'mango', 'orange', 'banana']</span>ages <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">]</span>ages<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ages<span class="token punctuation">)</span> <span class="token comment"># [24, 25, 24, 26, 25, 24, 19, 22]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="12-列表排序"><a href="#12-列表排序" class="headerlink" title="12. 列表排序"></a>12. 列表排序</h3><ol><li><p><code>sort()</code>按照升序重新排序列表项并修改原始列表，如果sort中的reverse参数为“true”，则降序排序</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'item1'</span><span class="token punctuation">,</span> <span class="token string">'item2'</span><span class="token punctuation">]</span>lst<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment"># ascending</span>lst<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token comment"># descending</span>fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">]</span>fruits<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>             <span class="token comment"># sorted in alphabetical order, ['banana', 'lemon', 'mango', 'orange']</span>fruits<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span> <span class="token comment"># ['orange', 'mango', 'lemon', 'banana']</span>ages <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">]</span>ages<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ages<span class="token punctuation">)</span> <span class="token comment">#  [19, 22, 24, 24, 24, 25, 25, 26]</span>ages<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ages<span class="token punctuation">)</span> <span class="token comment">#  [26, 25, 25, 24, 24, 24, 22, 19]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>sorted()</code>返回一个排序后的列表，不修改原列表的值</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># ['banana', 'lemon', 'mango', 'orange']</span><span class="token comment"># Reverse order</span>fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">]</span>fruits <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>fruits<span class="token punctuation">,</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>     <span class="token comment"># ['orange', 'mango', 'lemon', 'banana']</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="Day6-元组"><a href="#Day6-元组" class="headerlink" title="Day6-元组"></a>Day6-元组</h2><p>元组是有序且不可更改的不同数据类型的集合，元组使用<code>()</code>进行包裹，创建一个元组后，我们不能够更改它的值</p><h3 id="1-创建元组"><a href="#1-创建元组" class="headerlink" title="1. 创建元组"></a>1. 创建元组</h3><ol><li><p>空元组</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span>empty_tuple <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># or using the tuple constructor</span>empty_tuple <span class="token operator">=</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>含有初始值的元组</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span>tpl <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'item1'</span><span class="token punctuation">,</span> <span class="token string">'item2'</span><span class="token punctuation">,</span><span class="token string">'item3'</span><span class="token punctuation">)</span>fruits <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="2-元组长度"><a href="#2-元组长度" class="headerlink" title="2. 元组长度"></a>2. 元组长度</h3><ul><li><p><code>len()</code>方法获取元组内元素个数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span>tpl <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'item1'</span><span class="token punctuation">,</span> <span class="token string">'item2'</span><span class="token punctuation">,</span> <span class="token string">'item3'</span><span class="token punctuation">)</span><span class="token builtin">len</span><span class="token punctuation">(</span>tpl<span class="token punctuation">)</span>  <span class="token comment">#3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="3-访问元组项"><a href="#3-访问元组项" class="headerlink" title="3.访问元组项"></a>3.访问元组项</h3><ol><li><p>正索引<img src="https://gitee.com/t_d_l_h/blogimages/raw/master/img/15.png"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Syntax</span>tpl <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'item1'</span><span class="token punctuation">,</span> <span class="token string">'item2'</span><span class="token punctuation">,</span> <span class="token string">'item3'</span><span class="token punctuation">)</span>first_item <span class="token operator">=</span> tpl<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>second_item <span class="token operator">=</span> tpl<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>fruits <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">)</span>first_fruit <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>second_fruit <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>last_index <span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>last_fruit <span class="token operator">=</span> fruits<span class="token punctuation">[</span>las_index<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>负索引<img src="https://gitee.com/t_d_l_h/blogimages/raw/master/img/16.png"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Syntax</span>tpl <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'item1'</span><span class="token punctuation">,</span> <span class="token string">'item2'</span><span class="token punctuation">,</span> <span class="token string">'item3'</span><span class="token punctuation">,</span><span class="token string">'item4'</span><span class="token punctuation">)</span>first_item <span class="token operator">=</span> tpl<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span>second_item <span class="token operator">=</span> tpl<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span>fruits <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">)</span>first_fruit <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span>second_fruit <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span>last_fruit <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="4-切片元组"><a href="#4-切片元组" class="headerlink" title="4. 切片元组"></a>4. 切片元组</h3><p>切片后会产生一个新的元组</p><ol><li><p>正向切片</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">)</span>all_fruits <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span>    <span class="token comment"># all items</span>all_fruits<span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token punctuation">]</span>      <span class="token comment"># all items</span>orange_mango <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span>  <span class="token comment"># doesn't include item at index 3</span>orange_to_the_rest <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token comment">#output</span><span class="token punctuation">(</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>反向切片</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">)</span>all_fruits <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token comment"># all items</span>orange_mango <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment"># doesn't include item at index 3</span>orange_to_the_rest <span class="token operator">=</span> fruits<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token comment">#output</span><span class="token punctuation">(</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="5-将元组修改为列表"><a href="#5-将元组修改为列表" class="headerlink" title="5. 将元组修改为列表"></a>5. 将元组修改为列表</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">)</span>fruits <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>fruits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'apple'</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>     <span class="token comment"># ['apple', 'orange', 'mango', 'lemon']</span>fruits <span class="token operator">=</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>     <span class="token comment"># ('apple', 'orange', 'mango', 'lemon')</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-检查元组是否包含某个数据"><a href="#6-检查元组是否包含某个数据" class="headerlink" title="6. 检查元组是否包含某个数据"></a>6. 检查元组是否包含某个数据</h3><p>使用<code>in</code>字符</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'orange'</span> <span class="token keyword">in</span> fruits<span class="token punctuation">)</span> <span class="token comment"># True</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'apple'</span> <span class="token keyword">in</span> fruits<span class="token punctuation">)</span> <span class="token comment"># False</span>fruits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'apple'</span> <span class="token comment"># TypeError: 'tuple' object does not support item assignment</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-元组连接"><a href="#7-元组连接" class="headerlink" title="7. 元组连接"></a>7. 元组连接</h3><p>使用<code>+</code>进行连接</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">)</span>vegetables <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'Tomato'</span><span class="token punctuation">,</span> <span class="token string">'Potato'</span><span class="token punctuation">,</span> <span class="token string">'Cabbage'</span><span class="token punctuation">,</span><span class="token string">'Onion'</span><span class="token punctuation">,</span> <span class="token string">'Carrot'</span><span class="token punctuation">)</span>fruits_and_vegetables <span class="token operator">=</span> fruits <span class="token operator">+</span> vegetables<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="8-删除元组"><a href="#8-删除元组" class="headerlink" title="8. 删除元组"></a>8. 删除元组</h3><p>无法删除元组中的单个元素，但可以删除整个元组</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">)</span><span class="token keyword">del</span> fruits<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="Day7-集合-set"><a href="#Day7-集合-set" class="headerlink" title="Day7-集合(set)"></a>Day7-集合(set)</h2><p>集合的数学定义也可以在python中使用；集合是无序且无索引的，可以包含不同种类型的数据的；可以进行集合间的运算；</p><p><code>补充：列表不可作为集合的一部分：集合具有唯一性，所以是可哈希的，但列表是不可哈希的，所以创建这样的列表时会报错</code></p><h3 id="1-创建一个集合"><a href="#1-创建一个集合" class="headerlink" title="1. 创建一个集合"></a>1. 创建一个集合</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#空集</span><span class="token comment"># syntax</span>st <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment"># or</span>st <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#包含初始项的集合</span>st <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'item1'</span><span class="token punctuation">,</span> <span class="token string">'item2'</span><span class="token punctuation">,</span> <span class="token string">'item3'</span><span class="token punctuation">,</span> <span class="token string">'item4'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-获取集合的长度"><a href="#2-获取集合的长度" class="headerlink" title="2. 获取集合的长度"></a>2. 获取集合的长度</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">&#125;</span><span class="token builtin">len</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-访问集合中的项目"><a href="#3-访问集合中的项目" class="headerlink" title="3. 访问集合中的项目"></a>3. 访问集合中的项目</h3><p>需要通过循环来进行访问，因为集合的无序性，所以每次循环输出的结果都不一样</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> i <span class="token keyword">in</span> a<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="4-检查集合中的项目"><a href="#4-检查集合中的项目" class="headerlink" title="4. 检查集合中的项目"></a>4. 检查集合中的项目</h3><p>使用<code>in()</code>字符</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'mango'</span> <span class="token keyword">in</span> fruits <span class="token punctuation">)</span> <span class="token comment"># True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="5-添加项目到集合"><a href="#5-添加项目到集合" class="headerlink" title="5. 添加项目到集合"></a>5. 添加项目到集合</h3><ol><li><p>添加一项，使用<code>add()</code>方法</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">&#125;</span>fruits<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">'lime'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>添加多项，使用<code>update()</code>方法</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">&#125;</span>vegetables <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'tomato'</span><span class="token punctuation">,</span> <span class="token string">'potato'</span><span class="token punctuation">,</span> <span class="token string">'cabbage'</span><span class="token punctuation">,</span><span class="token string">'onion'</span><span class="token punctuation">,</span> <span class="token string">'carrot'</span><span class="token punctuation">)</span>fruits<span class="token punctuation">.</span>update<span class="token punctuation">(</span>vegetables<span class="token punctuation">)</span><span class="token comment">#output</span><span class="token punctuation">&#123;</span><span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'carrot'</span><span class="token punctuation">,</span> <span class="token string">'cabbage'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'tomato'</span><span class="token punctuation">,</span> <span class="token string">'onion'</span><span class="token punctuation">,</span> <span class="token string">'potato'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="6-从集合中移除项目"><a href="#6-从集合中移除项目" class="headerlink" title="6. 从集合中移除项目"></a>6. 从集合中移除项目</h3><ol><li><p><code>remove()</code>方法；从集合中删除一个项目，但如果该项目不存在而使用这个方法会报错</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">&#125;</span>fruits<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">'banana'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><code>discard()</code>方法；和remove类似，但删除不存在的值的时候不会报错</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">&#125;</span>fruits<span class="token punctuation">.</span>discard<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span><span class="token comment">#output</span><span class="token punctuation">&#123;</span><span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>pop()</code>删除集合中的一个随机项，并返回这个项的值</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">424</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><code>clear()</code>清空集合，但不删除</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">&#125;</span>fruits<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span> <span class="token comment"># set()</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><code>del()</code>删除集合，即在内存中删除该集合</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">&#125;</span><span class="token keyword">del</span> fruits<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h3 id="7-列表转集合"><a href="#7-列表转集合" class="headerlink" title="7. 列表转集合"></a>7. 列表转集合</h3><p>在列表转换为集合时，会删除列表中的重复项</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">,</span><span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'banana'</span><span class="token punctuation">]</span>fruits <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span> <span class="token comment"># &#123;'mango', 'lemon', 'banana', 'orange'&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="8-集合的连接"><a href="#8-集合的连接" class="headerlink" title="8. 集合的连接"></a>8. 集合的连接</h3><ol><li><p><code>union()</code>返回一个新的集合</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">424</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">&#125;</span>b <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'v'</span><span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>union<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><code>update()</code>将一个集合插入给定的集合</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">424</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">&#125;</span>b <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'v'</span><span class="token punctuation">&#125;</span>a<span class="token punctuation">.</span>update<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="9-集合相关运算"><a href="#9-集合相关运算" class="headerlink" title="9. 集合相关运算"></a>9. 集合相关运算</h3><ol><li><p>交集<code>intersection()</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">whole_numbers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">&#125;</span>even_numbers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">&#125;</span>whole_numbers<span class="token punctuation">.</span>intersection<span class="token punctuation">(</span>even_numbers<span class="token punctuation">)</span> <span class="token comment"># &#123;0, 2, 4, 6, 8, 10&#125;</span>python <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'p'</span><span class="token punctuation">,</span> <span class="token string">'y'</span><span class="token punctuation">,</span> <span class="token string">'t'</span><span class="token punctuation">,</span> <span class="token string">'h'</span><span class="token punctuation">,</span> <span class="token string">'o'</span><span class="token punctuation">,</span><span class="token string">'n'</span><span class="token punctuation">&#125;</span>dragon <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'g'</span><span class="token punctuation">,</span> <span class="token string">'o'</span><span class="token punctuation">,</span><span class="token string">'n'</span><span class="token punctuation">&#125;</span>python<span class="token punctuation">.</span>intersection<span class="token punctuation">(</span>dragon<span class="token punctuation">)</span>     <span class="token comment"># &#123;'o', 'n'&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>子集<code>issubset()</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">st1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'item1'</span><span class="token punctuation">,</span> <span class="token string">'item2'</span><span class="token punctuation">,</span> <span class="token string">'item3'</span><span class="token punctuation">,</span> <span class="token string">'item4'</span><span class="token punctuation">&#125;</span>st2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'item2'</span><span class="token punctuation">,</span> <span class="token string">'item3'</span><span class="token punctuation">&#125;</span>st2<span class="token punctuation">.</span>issubset<span class="token punctuation">(</span>st1<span class="token punctuation">)</span> <span class="token comment"># True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>父集<code>issuperset()</code> </p><pre class="line-numbers language-python" data-language="python"><code class="language-python">st1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'item1'</span><span class="token punctuation">,</span> <span class="token string">'item2'</span><span class="token punctuation">,</span> <span class="token string">'item3'</span><span class="token punctuation">,</span> <span class="token string">'item4'</span><span class="token punctuation">&#125;</span>st2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'item2'</span><span class="token punctuation">,</span> <span class="token string">'item3'</span><span class="token punctuation">&#125;</span>st1<span class="token punctuation">.</span>issuperset<span class="token punctuation">(</span>st2<span class="token punctuation">)</span> <span class="token comment"># True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>返回一个集合，其中包含仅存在于集合 x 中而不存在于集合 y 中的项目：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">x <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"apple"</span><span class="token punctuation">,</span> <span class="token string">"banana"</span><span class="token punctuation">,</span> <span class="token string">"cherry"</span><span class="token punctuation">&#125;</span>y <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"google"</span><span class="token punctuation">,</span> <span class="token string">"microsoft"</span><span class="token punctuation">,</span> <span class="token string">"apple"</span><span class="token punctuation">&#125;</span>z <span class="token operator">=</span> x<span class="token punctuation">.</span>difference<span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span>whole_numbers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">&#125;</span>even_numbers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">&#125;</span>whole_numbers<span class="token punctuation">.</span>difference<span class="token punctuation">(</span>even_numbers<span class="token punctuation">)</span> <span class="token comment"># &#123;1, 3, 5, 7, 9&#125;</span>python <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'p'</span><span class="token punctuation">,</span> <span class="token string">'y'</span><span class="token punctuation">,</span> <span class="token string">'t'</span><span class="token punctuation">,</span> <span class="token string">'o'</span><span class="token punctuation">,</span><span class="token string">'n'</span><span class="token punctuation">&#125;</span>dragon <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'g'</span><span class="token punctuation">,</span> <span class="token string">'o'</span><span class="token punctuation">,</span><span class="token string">'n'</span><span class="token punctuation">&#125;</span>python<span class="token punctuation">.</span>difference<span class="token punctuation">(</span>dragon<span class="token punctuation">)</span>     <span class="token comment"># &#123;'p', 'y', 't'&#125;  - the result is unordered (characteristic of sets)</span>dragon<span class="token punctuation">.</span>difference<span class="token punctuation">(</span>python<span class="token punctuation">)</span>     <span class="token comment"># &#123;'d', 'r', 'a', 'g'&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>symmetric_difference()</code> 方法返回两个集合中不重复的元素集合，即会移除两个集合中都存在的元素。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">whole_numbers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">&#125;</span>some_numbers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">&#125;</span>whole_numbers<span class="token punctuation">.</span>symmetric_difference<span class="token punctuation">(</span>some_numbers<span class="token punctuation">)</span> <span class="token comment"># &#123;0, 6, 7, 8, 9, 10&#125;</span>python <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'p'</span><span class="token punctuation">,</span> <span class="token string">'y'</span><span class="token punctuation">,</span> <span class="token string">'t'</span><span class="token punctuation">,</span> <span class="token string">'h'</span><span class="token punctuation">,</span> <span class="token string">'o'</span><span class="token punctuation">,</span><span class="token string">'n'</span><span class="token punctuation">&#125;</span>dragon <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'g'</span><span class="token punctuation">,</span> <span class="token string">'o'</span><span class="token punctuation">,</span><span class="token string">'n'</span><span class="token punctuation">&#125;</span>python<span class="token punctuation">.</span>symmetric_difference<span class="token punctuation">(</span>dragon<span class="token punctuation">)</span>  <span class="token comment"># &#123;'r', 't', 'p', 'y', 'g', 'a', 'd', 'h'&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>isdisjoint()</code>查询两个集合中是否存在相同的元素，没有返回True，有返回False</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">even_numbers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">&#125;</span>even_numbers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">&#125;</span>even_numbers<span class="token punctuation">.</span>isdisjoint<span class="token punctuation">(</span>odd_numbers<span class="token punctuation">)</span> <span class="token comment"># True, because no common item</span>python <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'p'</span><span class="token punctuation">,</span> <span class="token string">'y'</span><span class="token punctuation">,</span> <span class="token string">'t'</span><span class="token punctuation">,</span> <span class="token string">'h'</span><span class="token punctuation">,</span> <span class="token string">'o'</span><span class="token punctuation">,</span><span class="token string">'n'</span><span class="token punctuation">&#125;</span>dragon <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'g'</span><span class="token punctuation">,</span> <span class="token string">'o'</span><span class="token punctuation">,</span><span class="token string">'n'</span><span class="token punctuation">&#125;</span>python<span class="token punctuation">.</span>isdisjoint<span class="token punctuation">(</span>dragon<span class="token punctuation">)</span>  <span class="token comment"># False, there are common items &#123;'o', 'n'&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="Day8-字典-dict"><a href="#Day8-字典-dict" class="headerlink" title="Day8-字典(dict)"></a>Day8-字典(dict)</h2><p>字典是无序但可修改的数据类型，具体形式为：{‘键’:’值’}</p><h3 id="1-创建字典"><a href="#1-创建字典" class="headerlink" title="1. 创建字典"></a>1. 创建字典</h3><ol><li><p>空字典</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>直接赋值创建</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">dict</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'a'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>通过关键字<code>dict()</code>和关键字参数创建</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>b<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> d<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token comment">#output</span><span class="token punctuation">&#123;</span><span class="token string">'b'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>通过二元组列表创建</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span>a1<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span>b <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>b1<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>a1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b1<span class="token punctuation">)</span><span class="token comment">#output</span><span class="token punctuation">&#123;</span><span class="token string">'a'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>dict和zip结合创建</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span><span class="token string">'abc'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token comment">#output</span><span class="token punctuation">&#123;</span><span class="token string">'a'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>通过字典推导式创建</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span>i<span class="token punctuation">:</span> i<span class="token operator">*</span><span class="token number">2</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span><span class="token comment">#output</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>通过<code>dict.fromkeys()</code>创建，第一个参数为键，第二个参数为预设的<code>value</code>值，固定的不会变的</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">.</span>fromkeys<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token comment">#output</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">:</span> <span class="token string">'value'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">:</span> <span class="token string">'value'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span> <span class="token string">'value'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="2-检查一个字典中的键值对的个数"><a href="#2-检查一个字典中的键值对的个数" class="headerlink" title="2. 检查一个字典中的键值对的个数"></a>2. 检查一个字典中的键值对的个数</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">person <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'first_name'</span><span class="token punctuation">:</span><span class="token string">'Asabeneh'</span><span class="token punctuation">,</span>    <span class="token string">'last_name'</span><span class="token punctuation">:</span><span class="token string">'Yetayeh'</span><span class="token punctuation">,</span>    <span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">250</span><span class="token punctuation">,</span>    <span class="token string">'country'</span><span class="token punctuation">:</span><span class="token string">'Finland'</span><span class="token punctuation">,</span>    <span class="token string">'is_marred'</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span>    <span class="token string">'skills'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'JavaScript'</span><span class="token punctuation">,</span> <span class="token string">'React'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'address'</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>        <span class="token string">'street'</span><span class="token punctuation">:</span><span class="token string">'Space street'</span><span class="token punctuation">,</span>        <span class="token string">'zipcode'</span><span class="token punctuation">:</span><span class="token string">'02210'</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 7</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-访问字典的项目"><a href="#3-访问字典的项目" class="headerlink" title="3. 访问字典的项目"></a>3. 访问字典的项目</h3><ol><li><p>通过引用键名来获取对应值</p><blockquote><p>如果键不存在，则按键名访问项目会引发错误。为了避免这个错误，首先我们必须检查一个键是否存在，或者我们可以使用<em>get</em>方法。如果键不存在，get 方法返回 None，它是一个 NoneType 对象数据类型。</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python">person <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'first_name'</span><span class="token punctuation">:</span><span class="token string">'Asabeneh'</span><span class="token punctuation">,</span>    <span class="token string">'last_name'</span><span class="token punctuation">:</span><span class="token string">'Yetayeh'</span><span class="token punctuation">,</span>    <span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">250</span><span class="token punctuation">,</span>    <span class="token string">'country'</span><span class="token punctuation">:</span><span class="token string">'Finland'</span><span class="token punctuation">,</span>    <span class="token string">'is_marred'</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span>    <span class="token string">'skills'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'JavaScript'</span><span class="token punctuation">,</span> <span class="token string">'React'</span><span class="token punctuation">,</span> <span class="token string">'Node'</span><span class="token punctuation">,</span> <span class="token string">'MongoDB'</span><span class="token punctuation">,</span> <span class="token string">'Python'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'address'</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>        <span class="token string">'street'</span><span class="token punctuation">:</span><span class="token string">'Space street'</span><span class="token punctuation">,</span>        <span class="token string">'zipcode'</span><span class="token punctuation">:</span><span class="token string">'02210'</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span>person<span class="token punctuation">[</span><span class="token string">'first_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># Asabeneh</span><span class="token keyword">print</span><span class="token punctuation">(</span>person<span class="token punctuation">[</span><span class="token string">'country'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment"># Finland</span><span class="token keyword">print</span><span class="token punctuation">(</span>person<span class="token punctuation">[</span><span class="token string">'skills'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>     <span class="token comment"># ['JavaScript', 'React', 'Node', 'MongoDB', 'Python']</span><span class="token keyword">print</span><span class="token punctuation">(</span>person<span class="token punctuation">[</span><span class="token string">'skills'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># JavaScript</span><span class="token keyword">print</span><span class="token punctuation">(</span>person<span class="token punctuation">[</span><span class="token string">'address'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'street'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># Space street</span><span class="token keyword">print</span><span class="token punctuation">(</span>person<span class="token punctuation">[</span><span class="token string">'city'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>       <span class="token comment"># Error</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="4-添加项目到字典中"><a href="#4-添加项目到字典中" class="headerlink" title="4. 添加项目到字典中"></a>4. 添加项目到字典中</h3><p>即添加新的键值对</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span>dct <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'key1'</span><span class="token punctuation">:</span><span class="token string">'value1'</span><span class="token punctuation">,</span> <span class="token string">'key2'</span><span class="token punctuation">:</span><span class="token string">'value2'</span><span class="token punctuation">,</span> <span class="token string">'key3'</span><span class="token punctuation">:</span><span class="token string">'value3'</span><span class="token punctuation">,</span> <span class="token string">'key4'</span><span class="token punctuation">:</span><span class="token string">'value4'</span><span class="token punctuation">&#125;</span>dct<span class="token punctuation">[</span><span class="token string">'key5'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'value5'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="5-修改字典中的值"><a href="#5-修改字典中的值" class="headerlink" title="5. 修改字典中的值"></a>5. 修改字典中的值</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span>dct <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'key1'</span><span class="token punctuation">:</span><span class="token string">'value1'</span><span class="token punctuation">,</span> <span class="token string">'key2'</span><span class="token punctuation">:</span><span class="token string">'value2'</span><span class="token punctuation">,</span> <span class="token string">'key3'</span><span class="token punctuation">:</span><span class="token string">'value3'</span><span class="token punctuation">,</span> <span class="token string">'key4'</span><span class="token punctuation">:</span><span class="token string">'value4'</span><span class="token punctuation">&#125;</span>dct<span class="token punctuation">[</span><span class="token string">'key1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'value-one'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="6-删除字典中的键值对"><a href="#6-删除字典中的键值对" class="headerlink" title="6. 删除字典中的键值对"></a>6. 删除字典中的键值对</h3><ol><li><p><code>pop()</code>删除指定键名的项目</p></li><li><p><code>popitem()</code>删除最后一项</p></li><li><p><code>del</code> 删除指定键名的项目</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span>dct <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'key1'</span><span class="token punctuation">:</span><span class="token string">'value1'</span><span class="token punctuation">,</span> <span class="token string">'key2'</span><span class="token punctuation">:</span><span class="token string">'value2'</span><span class="token punctuation">,</span> <span class="token string">'key3'</span><span class="token punctuation">:</span><span class="token string">'value3'</span><span class="token punctuation">,</span> <span class="token string">'key4'</span><span class="token punctuation">:</span><span class="token string">'value4'</span><span class="token punctuation">&#125;</span>dct<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">'key1'</span><span class="token punctuation">)</span> <span class="token comment"># removes key1 item</span>dct <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'key1'</span><span class="token punctuation">:</span><span class="token string">'value1'</span><span class="token punctuation">,</span> <span class="token string">'key2'</span><span class="token punctuation">:</span><span class="token string">'value2'</span><span class="token punctuation">,</span> <span class="token string">'key3'</span><span class="token punctuation">:</span><span class="token string">'value3'</span><span class="token punctuation">,</span> <span class="token string">'key4'</span><span class="token punctuation">:</span><span class="token string">'value4'</span><span class="token punctuation">&#125;</span>dct<span class="token punctuation">.</span>popitem<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># removes the last item</span><span class="token keyword">del</span> dct<span class="token punctuation">[</span><span class="token string">'key2'</span><span class="token punctuation">]</span> <span class="token comment"># removes key2 item</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="7-字典与其他数据类型操作"><a href="#7-字典与其他数据类型操作" class="headerlink" title="7. 字典与其他数据类型操作"></a>7. 字典与其他数据类型操作</h3><ol><li><p>字典更改为元组列表<code>items()</code>方法</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'a'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#output</span>dict_items<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>字典键作为列表获取</p><ul><li>使用<code>keys()</code>方法</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'a'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#output</span>dict_keys<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>获取字典值作为列表形式</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'a'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#output</span>dict_values<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="8-字典自身操作"><a href="#8-字典自身操作" class="headerlink" title="8. 字典自身操作"></a>8. 字典自身操作</h3><ol><li><p>清除（字典本身还在，但里面的数据全没了）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span>dct <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'key1'</span><span class="token punctuation">:</span><span class="token string">'value1'</span><span class="token punctuation">,</span> <span class="token string">'key2'</span><span class="token punctuation">:</span><span class="token string">'value2'</span><span class="token punctuation">,</span> <span class="token string">'key3'</span><span class="token punctuation">:</span><span class="token string">'value3'</span><span class="token punctuation">,</span> <span class="token string">'key4'</span><span class="token punctuation">:</span><span class="token string">'value4'</span><span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span>dct<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># None</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>删除</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span>dct <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'key1'</span><span class="token punctuation">:</span><span class="token string">'value1'</span><span class="token punctuation">,</span> <span class="token string">'key2'</span><span class="token punctuation">:</span><span class="token string">'value2'</span><span class="token punctuation">,</span> <span class="token string">'key3'</span><span class="token punctuation">:</span><span class="token string">'value3'</span><span class="token punctuation">,</span> <span class="token string">'key4'</span><span class="token punctuation">:</span><span class="token string">'value4'</span><span class="token punctuation">&#125;</span><span class="token keyword">del</span> dct<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>复制</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span>dct <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'key1'</span><span class="token punctuation">:</span><span class="token string">'value1'</span><span class="token punctuation">,</span> <span class="token string">'key2'</span><span class="token punctuation">:</span><span class="token string">'value2'</span><span class="token punctuation">,</span> <span class="token string">'key3'</span><span class="token punctuation">:</span><span class="token string">'value3'</span><span class="token punctuation">,</span> <span class="token string">'key4'</span><span class="token punctuation">:</span><span class="token string">'value4'</span><span class="token punctuation">&#125;</span>dct_copy <span class="token operator">=</span> dct<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># &#123;'key1':'value1', 'key2':'value2', 'key3':'value3', 'key4':'value4'&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="Day9-条件"><a href="#Day9-条件" class="headerlink" title="Day9-条件"></a>Day9-条件</h2><h3 id="1-条件句"><a href="#1-条件句" class="headerlink" title="1. 条件句"></a>1. 条件句</h3><p>if，else，elif</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span><span class="token keyword">if</span> condition<span class="token punctuation">:</span>    code<span class="token keyword">elif</span> condition<span class="token punctuation">:</span>    code<span class="token keyword">else</span><span class="token punctuation">:</span>    code<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">if</span> a <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A is a positive number'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> a <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A is a negative number'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A is zero'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也可以写在一行中，类似于==列表解析式==的写法</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token number">3</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A is positive'</span><span class="token punctuation">)</span> <span class="token keyword">if</span> a <span class="token operator">></span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A is negative'</span><span class="token punctuation">)</span> <span class="token comment"># first condition met, 'A is positive' will be printed</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-嵌套条件"><a href="#2-嵌套条件" class="headerlink" title="2. 嵌套条件"></a>2. 嵌套条件</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">if</span> a <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> a <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A is a positive and even integer'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A is a positive number'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A is zero'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A is a negative number'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-条件和逻辑运算搭配"><a href="#3-条件和逻辑运算搭配" class="headerlink" title="3.条件和逻辑运算搭配"></a>3.条件和逻辑运算搭配</h3><ol><li><p>and</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">if</span> a <span class="token operator">></span> <span class="token number">0</span> <span class="token keyword">and</span> a <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A is an even and positive integer'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> a <span class="token operator">></span> <span class="token number">0</span> <span class="token keyword">and</span> a <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span>  <span class="token number">0</span><span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A is a positive integer'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A is zero'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A is negative'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>or</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">user <span class="token operator">=</span> <span class="token string">'James'</span>access_level <span class="token operator">=</span> <span class="token number">3</span><span class="token keyword">if</span> user <span class="token operator">==</span> <span class="token string">'admin'</span> <span class="token keyword">or</span> access_level <span class="token operator">>=</span> <span class="token number">4</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Access granted!'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Access denied!'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="Day10-循环"><a href="#Day10-循环" class="headerlink" title="Day10-循环"></a>Day10-循环</h2><h3 id="1-while"><a href="#1-while" class="headerlink" title="1. while"></a>1. while</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> count <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>    count <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token number">1</span><span class="token comment">#prints from 0 to 4</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>while还可以与else进行搭配使用</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> count <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>    count <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token number">1</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-break"><a href="#2-break" class="headerlink" title="2. break"></a>2. break</h3><p>想退出或停止循环时使用break</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> count <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>    count <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token number">1</span>    <span class="token keyword">if</span> count <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-continue"><a href="#3-continue" class="headerlink" title="3. continue"></a>3. continue</h3><p>跳过循环中剩下的代码，开始下一次循环</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> count <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> count <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>        <span class="token keyword">continue</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>    count <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-for"><a href="#4-for" class="headerlink" title="4. for"></a>4. for</h3><p>for除了用作循环，还用于迭代序列(即列表，元组，字典，集合或字符串)</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#列表</span>a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> a<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token comment">#1 2 3 4 5 6</span><span class="token comment">#元组</span>a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> a<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token comment">#1 2 3 4 5 6</span><span class="token comment">#字典</span>dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'a'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> key <span class="token keyword">in</span> dic<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token comment">#a b c d</span><span class="token comment">#集合</span>dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> i <span class="token keyword">in</span> dic<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token comment">#1 2 3 4 5 6 </span><span class="token comment">#字符串</span>dic <span class="token operator">=</span> <span class="token string">'greagagarg'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> dic<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token comment">#g r e a g a g a r g</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>for可以和else结合在一起使用，当循环结束后就执行else中的内容</p><h3 id="5-pass"><a href="#5-pass" class="headerlink" title="5. pass"></a>5. pass</h3><p>当循环体内暂时不写语句时，可以写pass充当占位功能，本身不执行</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> number <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="Day11-函数"><a href="#Day11-函数" class="headerlink" title="Day11-函数"></a>Day11-函数</h2><h3 id="1-声明和调用函数"><a href="#1-声明和调用函数" class="headerlink" title="1. 声明和调用函数"></a>1. 声明和调用函数</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span><span class="token comment"># Declaring a function</span><span class="token keyword">def</span> <span class="token function">function_name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    codes    codes<span class="token comment"># Calling a function</span>function_name<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-带参函数"><a href="#2-带参函数" class="headerlink" title="2. 带参函数"></a>2. 带参函数</h3><ol><li><p>单参数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span><span class="token comment"># Declaring a function</span><span class="token keyword">def</span> <span class="token function">function_name</span><span class="token punctuation">(</span>parameter<span class="token punctuation">)</span><span class="token punctuation">:</span>  codes  codes<span class="token comment"># Calling function</span><span class="token keyword">print</span><span class="token punctuation">(</span>function_name<span class="token punctuation">(</span>argument<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>多参数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span><span class="token comment"># Declaring a function</span><span class="token keyword">def</span> <span class="token function">function_name</span><span class="token punctuation">(</span>para1<span class="token punctuation">,</span> para2<span class="token punctuation">)</span><span class="token punctuation">:</span>  codes  codes<span class="token comment"># Calling function</span><span class="token keyword">print</span><span class="token punctuation">(</span>function_name<span class="token punctuation">(</span>arg1<span class="token punctuation">,</span> arg2<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>通过指定参数的值</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span><span class="token comment"># Declaring a function</span><span class="token keyword">def</span> <span class="token function">function_name</span><span class="token punctuation">(</span>para1<span class="token punctuation">,</span> para2<span class="token punctuation">)</span><span class="token punctuation">:</span>    codes    codes<span class="token comment"># Calling function</span><span class="token keyword">print</span><span class="token punctuation">(</span>function_name<span class="token punctuation">(</span>para1 <span class="token operator">=</span> <span class="token string">'John'</span><span class="token punctuation">,</span> para2 <span class="token operator">=</span> <span class="token string">'Doe'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># the order of arguments does not matter here</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>默认值参数</p><p>当我们不向参数提供值，参数可以使用预先赋予的默认值</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># syntax</span><span class="token comment"># Declaring a function</span><span class="token keyword">def</span> <span class="token function">function_name</span><span class="token punctuation">(</span>param <span class="token operator">=</span> value<span class="token punctuation">)</span><span class="token punctuation">:</span>    codes    codes<span class="token comment"># Calling function</span>function_name<span class="token punctuation">(</span><span class="token punctuation">)</span>function_name<span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>任意数量的参数</p><p>当我们不知道接收参数的数量时，我们可以在参数前加一个<code>*</code>，来创建一个可以接收任意数量参数的函数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">sum_all_nums</span><span class="token punctuation">(</span><span class="token operator">*</span>nums<span class="token punctuation">)</span><span class="token punctuation">:</span>    total <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> num <span class="token keyword">in</span> nums<span class="token punctuation">:</span>        total <span class="token operator">+=</span> num     <span class="token comment"># same as total = total + num </span>    <span class="token keyword">return</span> total<span class="token keyword">print</span><span class="token punctuation">(</span>sum_all_nums<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>函数作为另一个函数的参数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#You can pass functions around as parameters</span><span class="token keyword">def</span> <span class="token function">square_number</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> n <span class="token operator">*</span> n<span class="token keyword">def</span> <span class="token function">do_something</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> f<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>do_something<span class="token punctuation">(</span>square_number<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 27</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="Day12-模块"><a href="#Day12-模块" class="headerlink" title="Day12-模块"></a>Day12-模块</h2><h3 id="1-模块是什么"><a href="#1-模块是什么" class="headerlink" title="1.模块是什么"></a>1.模块是什么</h3><p>模块是简单的代码文件（比如只包含变量的，）或者是复杂的代码文件（实现了功能的）</p><h3 id="2-导入模块"><a href="#2-导入模块" class="headerlink" title="2. 导入模块"></a>2. 导入模块</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> xxxx<span class="token punctuation">(</span>模块名<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-从模块导入函数"><a href="#3-从模块导入函数" class="headerlink" title="3. 从模块导入函数"></a>3. 从模块导入函数</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> xxx<span class="token punctuation">(</span>模块<span class="token punctuation">)</span> <span class="token keyword">import</span> yyy<span class="token punctuation">(</span>函数名<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-重命名导入的函数"><a href="#4-重命名导入的函数" class="headerlink" title="4. 重命名导入的函数"></a>4. 重命名导入的函数</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> xxx<span class="token punctuation">(</span>模块<span class="token punctuation">)</span> <span class="token keyword">import</span> yyy<span class="token punctuation">(</span>函数名<span class="token punctuation">)</span> <span class="token keyword">as</span> zzz<span class="token punctuation">(</span>别名<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5-导入内置模块"><a href="#5-导入内置模块" class="headerlink" title="5. 导入内置模块"></a>5. 导入内置模块</h3><ol><li><p>操作系统模块<code>os</code></p><p>用于访问操作系统功能的模块，通用功能为获取平台信息，对目录的操作，判断操作(比如是否是目录，文件是否存在)</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># import the module</span><span class="token keyword">import</span> os<span class="token comment"># Creating a directory</span>os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span><span class="token string">'directory_name'</span><span class="token punctuation">)</span><span class="token comment"># Changing the current directory</span>os<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token comment"># Getting current working directory</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># Removing directory</span>os<span class="token punctuation">.</span>rmdir<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>系统模块<code>sys</code></p><p>用于操作 Python 运行时环境的不同部分的函数和变量</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token comment">#print(sys.argv[0], argv[1],sys.argv[2])  # this line would print out: filename argument1 argument2</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Welcome &#123;&#125;. Enjoy  &#123;&#125; challenge!'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#input</span>python script<span class="token punctuation">.</span>py Asabeneh 30DaysOfPython<span class="token comment">#output</span>Welcome Asabeneh<span class="token punctuation">.</span> Enjoy  30DayOfPython challenge! <span class="token comment">#常用的sys命令</span><span class="token comment"># to exit sys</span>sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># To know the largest integer variable it takes</span>sys<span class="token punctuation">.</span>maxsize<span class="token comment"># To know environment path</span>sys<span class="token punctuation">.</span>path<span class="token comment"># To know the version of python you are using</span>sys<span class="token punctuation">.</span>version<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>统计模块(statistics)</p><p>提供数值数据的数理统计功能。该模块中定义的流行统计函数：均值、中位数、众数、标准差等。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> statistics <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token comment"># importing all the statistics modules</span>ages <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>mean<span class="token punctuation">(</span>ages<span class="token punctuation">)</span><span class="token punctuation">)</span>       <span class="token comment"># ~22.9</span><span class="token keyword">print</span><span class="token punctuation">(</span>median<span class="token punctuation">(</span>ages<span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment"># 23</span><span class="token keyword">print</span><span class="token punctuation">(</span>mode<span class="token punctuation">(</span>ages<span class="token punctuation">)</span><span class="token punctuation">)</span>       <span class="token comment"># 20</span><span class="token keyword">print</span><span class="token punctuation">(</span>stdev<span class="token punctuation">(</span>ages<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment"># ~2.3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>数学模块(math)</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> math <span class="token keyword">import</span> pi<span class="token punctuation">,</span> sqrt<span class="token punctuation">,</span> <span class="token builtin">pow</span><span class="token punctuation">,</span> floor<span class="token punctuation">,</span> ceil<span class="token punctuation">,</span> log10<span class="token keyword">print</span><span class="token punctuation">(</span>pi<span class="token punctuation">)</span>                 <span class="token comment"># 3.141592653589793</span><span class="token keyword">print</span><span class="token punctuation">(</span>sqrt<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token comment"># 1.4142135623730951</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>          <span class="token comment"># 8.0</span><span class="token keyword">print</span><span class="token punctuation">(</span>floor<span class="token punctuation">(</span><span class="token number">9.81</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment"># 9</span><span class="token keyword">print</span><span class="token punctuation">(</span>ceil<span class="token punctuation">(</span><span class="token number">9.81</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token comment"># 10</span><span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>log10<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="Day13-列表深入"><a href="#Day13-列表深入" class="headerlink" title="Day13-列表深入"></a>Day13-列表深入</h2><h3 id="1-列表推导式"><a href="#1-列表推导式" class="headerlink" title="1. 列表推导式"></a>1. 列表推导式</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># One way</span>language <span class="token operator">=</span> <span class="token string">'Python'</span>lst <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>language<span class="token punctuation">)</span> <span class="token comment"># changing the string to list</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment"># list</span><span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span>           <span class="token comment"># ['P', 'y', 't', 'h', 'o', 'n']</span><span class="token comment"># Second way: list comprehension</span>lst <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> language<span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># list</span><span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span>       <span class="token comment"># ['P', 'y', 't', 'h', 'o', 'n']</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Generating numbers</span>numbers <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">]</span>  <span class="token comment"># to generate numbers from 0 to 10</span><span class="token keyword">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>                    <span class="token comment"># [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span><span class="token comment"># It is possible to do mathematical operations during iteration</span>squares <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token operator">*</span> i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>squares<span class="token punctuation">)</span>                    <span class="token comment"># [0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100]</span><span class="token comment"># It is also possible to make a list of tuples</span>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i <span class="token operator">*</span> i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>                             <span class="token comment"># [(0, 0), (1, 1), (2, 4), (3, 9), (4, 16), (5, 25)]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Generating even numbers</span>even_numbers <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">)</span> <span class="token keyword">if</span> i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment"># to generate even numbers list in range 0 to 21</span><span class="token keyword">print</span><span class="token punctuation">(</span>even_numbers<span class="token punctuation">)</span>                    <span class="token comment"># [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20]</span><span class="token comment"># Generating odd numbers</span>odd_numbers <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">)</span> <span class="token keyword">if</span> i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment"># to generate odd numbers in range 0 to 21</span><span class="token keyword">print</span><span class="token punctuation">(</span>odd_numbers<span class="token punctuation">)</span>                      <span class="token comment"># [1, 3, 5, 7, 9, 11, 13, 15, 17, 19]</span><span class="token comment"># Filter numbers: let's filter out positive even numbers from the list below</span>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>positive_even_numbers <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">)</span> <span class="token keyword">if</span> i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> i <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>positive_even_numbers<span class="token punctuation">)</span>                    <span class="token comment"># [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]</span><span class="token comment"># Flattening a three dimensional array</span>list_of_lists <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span>flattened_list <span class="token operator">=</span> <span class="token punctuation">[</span> number <span class="token keyword">for</span> row <span class="token keyword">in</span> list_of_lists <span class="token keyword">for</span> number <span class="token keyword">in</span> row<span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>flattened_list<span class="token punctuation">)</span>    <span class="token comment"># [1, 2, 3, 4, 5, 6, 7, 8, 9]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-匿名函数-lambda"><a href="#2-匿名函数-lambda" class="headerlink" title="2. 匿名函数(lambda)"></a>2. 匿名函数(lambda)</h3><ol><li><p>单独的</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Named function</span><span class="token keyword">def</span> <span class="token function">add_two_nums</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token keyword">print</span><span class="token punctuation">(</span>add_two_nums<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment"># 5</span><span class="token comment"># Lets change the above function to a lambda function</span>add_two_nums <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span> b<span class="token punctuation">:</span> a <span class="token operator">+</span> b<span class="token keyword">print</span><span class="token punctuation">(</span>add_two_nums<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 5</span><span class="token comment"># Self invoking lambda function</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> a<span class="token punctuation">,</span> b<span class="token punctuation">:</span> a <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># 5 - need to encapsulate it in print() to see the result in the console</span>square <span class="token operator">=</span> <span class="token keyword">lambda</span> x <span class="token punctuation">:</span> x <span class="token operator">**</span> <span class="token number">2</span><span class="token keyword">print</span><span class="token punctuation">(</span>square<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 9</span>cube <span class="token operator">=</span> <span class="token keyword">lambda</span> x <span class="token punctuation">:</span> x <span class="token operator">**</span> <span class="token number">3</span><span class="token keyword">print</span><span class="token punctuation">(</span>cube<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 27</span><span class="token comment"># Multiple variables</span>multiple_variable <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">:</span> a <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">3</span> <span class="token operator">*</span> b <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> c<span class="token keyword">print</span><span class="token punctuation">(</span>multiple_variable<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 22</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在另一个函数中使用</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">power</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token keyword">lambda</span> n <span class="token punctuation">:</span> x <span class="token operator">**</span> ncube <span class="token operator">=</span> power<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>   <span class="token comment"># function power now need 2 arguments to run, in separate rounded brackets</span><span class="token keyword">print</span><span class="token punctuation">(</span>cube<span class="token punctuation">)</span>          <span class="token comment"># 8</span>two_power_of_five <span class="token operator">=</span> power<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>two_power_of_five<span class="token punctuation">)</span>  <span class="token comment"># 32</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="Day14-高阶函数"><a href="#Day14-高阶函数" class="headerlink" title="Day14-高阶函数"></a>Day14-高阶函数</h2><h3 id="1-函数作为函数的参数"><a href="#1-函数作为函数的参数" class="headerlink" title="1. 函数作为函数的参数"></a>1. 函数作为函数的参数</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">sum_numbers</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># normal function</span>    <span class="token keyword">return</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>    <span class="token comment"># a sad function abusing the built-in sum function :&lt;</span><span class="token keyword">def</span> <span class="token function">higher_order_function</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> lst<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># function as a parameter</span>    summation <span class="token operator">=</span> f<span class="token punctuation">(</span>lst<span class="token punctuation">)</span>    <span class="token keyword">return</span> summationresult <span class="token operator">=</span> higher_order_function<span class="token punctuation">(</span>sum_numbers<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>       <span class="token comment"># 15</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-函数作为返回值"><a href="#2-函数作为返回值" class="headerlink" title="2. 函数作为返回值"></a>2. 函数作为返回值</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">square</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>          <span class="token comment"># a square function</span>    <span class="token keyword">return</span> x <span class="token operator">**</span> <span class="token number">2</span><span class="token keyword">def</span> <span class="token function">cube</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment"># a cube function</span>    <span class="token keyword">return</span> x <span class="token operator">**</span> <span class="token number">3</span><span class="token keyword">def</span> <span class="token function">absolute</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># an absolute value function</span>    <span class="token keyword">if</span> x <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> x    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">higher_order_function</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># a higher order function returning a function</span>    <span class="token keyword">if</span> <span class="token builtin">type</span> <span class="token operator">==</span> <span class="token string">'square'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> square    <span class="token keyword">elif</span> <span class="token builtin">type</span> <span class="token operator">==</span> <span class="token string">'cube'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> cube    <span class="token keyword">elif</span> <span class="token builtin">type</span> <span class="token operator">==</span> <span class="token string">'absolute'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> absoluteresult <span class="token operator">=</span> higher_order_function<span class="token punctuation">(</span><span class="token string">'square'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>       <span class="token comment"># 9</span>result <span class="token operator">=</span> higher_order_function<span class="token punctuation">(</span><span class="token string">'cube'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>       <span class="token comment"># 27</span>result <span class="token operator">=</span> higher_order_function<span class="token punctuation">(</span><span class="token string">'absolute'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment"># 3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-闭包"><a href="#3-闭包" class="headerlink" title="3. 闭包"></a>3. 闭包</h3><p><a href="https://zhuanlan.zhihu.com/p/341376218">https://zhuanlan.zhihu.com/p/341376218</a></p><p><a href="https://www.cnblogs.com/BlueSkyyj/p/8884236.html">https://www.cnblogs.com/BlueSkyyj/p/8884236.html</a></p><p>闭包条件：</p><ol><li>在一个外函数中定义了一个内函数</li><li>内函数中运用了外函数的临时变量</li><li>外函数的返回值是内函数的引用</li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">add_ten</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    ten <span class="token operator">=</span> <span class="token number">10</span>    <span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> num <span class="token operator">+</span> ten    <span class="token keyword">return</span> addclosure_result <span class="token operator">=</span> add_ten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>closure_result<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 15</span><span class="token keyword">print</span><span class="token punctuation">(</span>closure_result<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 20</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-装饰器"><a href="#4-装饰器" class="headerlink" title="4. 装饰器"></a>4. 装饰器</h3><p><a href="https://www.jianshu.com/p/ee82b941772a">https://www.jianshu.com/p/ee82b941772a</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Normal function</span><span class="token keyword">def</span> <span class="token function">greeting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">'Welcome to Python'</span><span class="token keyword">def</span> <span class="token function">uppercase_decorator</span><span class="token punctuation">(</span>function<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">wrapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        func <span class="token operator">=</span> function<span class="token punctuation">(</span><span class="token punctuation">)</span>        make_uppercase <span class="token operator">=</span> func<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> make_uppercase    <span class="token keyword">return</span> wrapperg <span class="token operator">=</span> uppercase_decorator<span class="token punctuation">(</span>greeting<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>g<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>          <span class="token comment"># WELCOME TO PYTHON</span><span class="token comment">## Let us implement the example above with a decorator</span><span class="token triple-quoted-string string">'''This decorator function is a higher order functionthat takes a function as a parameter'''</span><span class="token keyword">def</span> <span class="token function">uppercase_decorator</span><span class="token punctuation">(</span>function<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">wrapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        func <span class="token operator">=</span> function<span class="token punctuation">(</span><span class="token punctuation">)</span>        make_uppercase <span class="token operator">=</span> func<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> make_uppercase    <span class="token keyword">return</span> wrapper<span class="token decorator annotation punctuation">@uppercase_decorator</span><span class="token keyword">def</span> <span class="token function">greeting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">'Welcome to Python'</span><span class="token keyword">print</span><span class="token punctuation">(</span>greeting<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># WELCOME TO PYTHON</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">decorator_with_parameters</span><span class="token punctuation">(</span>function<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">wrapper_accepting_parameters</span><span class="token punctuation">(</span>para1<span class="token punctuation">,</span> para2<span class="token punctuation">,</span> para3<span class="token punctuation">)</span><span class="token punctuation">:</span>        function<span class="token punctuation">(</span>para1<span class="token punctuation">,</span> para2<span class="token punctuation">,</span> para3<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"I live in &#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>para3<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> wrapper_accepting_parameters<span class="token keyword">def</span> <span class="token function">print_full_name</span><span class="token punctuation">(</span>first_name<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> country<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"I am &#123;&#125; &#123;&#125;. I love to teach."</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>        first_name<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> country<span class="token punctuation">)</span><span class="token punctuation">)</span>g<span class="token operator">=</span>decorator_with_parameters<span class="token punctuation">(</span>print_full_name<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>g<span class="token punctuation">(</span><span class="token string">"Asabeneh"</span><span class="token punctuation">,</span> <span class="token string">"Yetayeh"</span><span class="token punctuation">,</span> <span class="token string">'Finland'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#使用装饰器</span><span class="token keyword">def</span> <span class="token function">decorator_with_parameters</span><span class="token punctuation">(</span>function<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">wrapper_accepting_parameters</span><span class="token punctuation">(</span>para1<span class="token punctuation">,</span> para2<span class="token punctuation">,</span> para3<span class="token punctuation">)</span><span class="token punctuation">:</span>        function<span class="token punctuation">(</span>para1<span class="token punctuation">,</span> para2<span class="token punctuation">,</span> para3<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"I live in &#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>para3<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> wrapper_accepting_parameters<span class="token decorator annotation punctuation">@decorator_with_parameters</span><span class="token keyword">def</span> <span class="token function">print_full_name</span><span class="token punctuation">(</span>first_name<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> country<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"I am &#123;&#125; &#123;&#125;. I love to teach."</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>        first_name<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> country<span class="token punctuation">)</span><span class="token punctuation">)</span>print_full_name<span class="token punctuation">(</span><span class="token string">"Asabeneh"</span><span class="token punctuation">,</span> <span class="token string">"Yetayeh"</span><span class="token punctuation">,</span><span class="token string">'Finland'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-内置高阶函数"><a href="#5-内置高阶函数" class="headerlink" title="5. 内置高阶函数"></a>5. 内置高阶函数</h3><ol><li><p><code>map()</code></p><p>接受一个表达式和一个可迭代的数据 </p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#1</span>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span> <span class="token comment"># iterable</span><span class="token keyword">def</span> <span class="token function">square</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> x <span class="token operator">**</span> <span class="token number">2</span>numbers_squared <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span>square<span class="token punctuation">,</span> numbers<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>numbers_squared<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># [1, 4, 9, 16, 25]</span><span class="token comment"># Lets apply it with a lambda function</span>numbers_squared <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x <span class="token punctuation">:</span> x <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">,</span> numbers<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>numbers_squared<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># [1, 4, 9, 16, 25]</span><span class="token comment">#2</span>numbers_str <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'1'</span><span class="token punctuation">,</span> <span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token string">'3'</span><span class="token punctuation">,</span> <span class="token string">'4'</span><span class="token punctuation">,</span> <span class="token string">'5'</span><span class="token punctuation">]</span>  <span class="token comment"># iterable</span>numbers_int <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> numbers_str<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>numbers_int<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># [1, 2, 3, 4, 5]</span><span class="token comment">#3names = ['Asabeneh', 'Lidiya', 'Ermias', 'Abraham']  # iterable</span><span class="token keyword">def</span> <span class="token function">change_to_upper</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> name<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span>names_upper_cased <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span>change_to_upper<span class="token punctuation">,</span> names<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>names_upper_cased<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># ['ASABENEH', 'LIDIYA', 'ERMIAS', 'ABRAHAM']</span><span class="token comment"># Let us apply it with a lambda function</span>names_upper_cased <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> name<span class="token punctuation">:</span> name<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> names<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>names_upper_cased<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># ['ASABENEH', 'LIDIYA', 'ERMIAS', 'ABRAHAM']</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>filter()</code>为可迭代对象通过表达式返回布尔值，返回结果为真的数据</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>  <span class="token comment"># iterable</span><span class="token keyword">def</span> <span class="token function">is_odd</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> num <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">return</span> <span class="token boolean">False</span>odd_numbers <span class="token operator">=</span> <span class="token builtin">filter</span><span class="token punctuation">(</span>is_odd<span class="token punctuation">,</span> numbers<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>odd_numbers<span class="token punctuation">)</span><span class="token punctuation">)</span>       <span class="token comment"># [1, 3, 5]</span><span class="token comment"># Filter long name</span>names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Asabeneh'</span><span class="token punctuation">,</span> <span class="token string">'Lidiya'</span><span class="token punctuation">,</span> <span class="token string">'Ermias'</span><span class="token punctuation">,</span> <span class="token string">'Abraham'</span><span class="token punctuation">]</span>  <span class="token comment"># iterable</span><span class="token keyword">def</span> <span class="token function">is_name_long</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">7</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">return</span> <span class="token boolean">False</span>long_names <span class="token operator">=</span> <span class="token builtin">filter</span><span class="token punctuation">(</span>is_name_long<span class="token punctuation">,</span> names<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>long_names<span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token comment"># ['Asabeneh']</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>reduce()</code>函数将一个数据集合（链表，元组等）中的所有数据进行下列操作：用传给 reduce 中的函数 function（有两个参数）先对集合中的第 1、2 个元素进行操作，得到的结果再与第三个数据用 function 函数运算，最后得到一个结果。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">numbers_str <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'1'</span><span class="token punctuation">,</span> <span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token string">'3'</span><span class="token punctuation">,</span> <span class="token string">'4'</span><span class="token punctuation">,</span> <span class="token string">'5'</span><span class="token punctuation">]</span>  <span class="token comment"># iterable</span><span class="token keyword">def</span> <span class="token function">add_two_nums</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">int</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span>total <span class="token operator">=</span> <span class="token builtin">reduce</span><span class="token punctuation">(</span>add_two_nums<span class="token punctuation">,</span> numbers_str<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span>    <span class="token comment"># 15</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="Day15-错误类型"><a href="#Day15-错误类型" class="headerlink" title="Day15-错误类型"></a>Day15-错误类型</h2><h3 id="1-语法错误（SyntaxError）"><a href="#1-语法错误（SyntaxError）" class="headerlink" title="1. 语法错误（SyntaxError）"></a>1. 语法错误（SyntaxError）</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">asabeneh@Asabeneh<span class="token punctuation">:</span><span class="token operator">~</span>$ pythonPython <span class="token number">3.9</span><span class="token number">.6</span> <span class="token punctuation">(</span>default<span class="token punctuation">,</span> Jun <span class="token number">28</span> <span class="token number">2021</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">[</span>Clang <span class="token number">11.0</span><span class="token number">.0</span> <span class="token punctuation">(</span>clang<span class="token operator">-</span><span class="token number">1100.0</span><span class="token number">.33</span><span class="token number">.8</span><span class="token punctuation">)</span><span class="token punctuation">]</span> on darwinType <span class="token string">"help"</span><span class="token punctuation">,</span> <span class="token string">"copyright"</span><span class="token punctuation">,</span> <span class="token string">"credits"</span> <span class="token keyword">or</span> <span class="token string">"license"</span> <span class="token keyword">for</span> more information<span class="token punctuation">.</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span> <span class="token string">'hello world'</span>  File <span class="token string">"&lt;stdin>"</span><span class="token punctuation">,</span> line <span class="token number">1</span>    <span class="token keyword">print</span> <span class="token string">'hello world'</span>                      <span class="token operator">^</span>SyntaxError<span class="token punctuation">:</span> Missing parentheses <span class="token keyword">in</span> call to <span class="token string">'print'</span><span class="token punctuation">.</span> Did you mean <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'hello world'</span><span class="token punctuation">)</span>?<span class="token operator">>></span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-名称错误（NameError）"><a href="#2-名称错误（NameError）" class="headerlink" title="2. 名称错误（NameError）"></a>2. 名称错误（NameError）</h3><p>一般是变量名称定义相关问题</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">asabeneh@Asabeneh<span class="token punctuation">:</span><span class="token operator">~</span>$ pythonPython <span class="token number">3.9</span><span class="token number">.6</span> <span class="token punctuation">(</span>default<span class="token punctuation">,</span> Jun <span class="token number">28</span> <span class="token number">2021</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">[</span>Clang <span class="token number">11.0</span><span class="token number">.0</span> <span class="token punctuation">(</span>clang<span class="token operator">-</span><span class="token number">1100.0</span><span class="token number">.33</span><span class="token number">.8</span><span class="token punctuation">)</span><span class="token punctuation">]</span> on darwinType <span class="token string">"help"</span><span class="token punctuation">,</span> <span class="token string">"copyright"</span><span class="token punctuation">,</span> <span class="token string">"credits"</span> <span class="token keyword">or</span> <span class="token string">"license"</span> <span class="token keyword">for</span> more information<span class="token punctuation">.</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span>Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>  File <span class="token string">"&lt;stdin>"</span><span class="token punctuation">,</span> line <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">></span>NameError<span class="token punctuation">:</span> name <span class="token string">'age'</span> <span class="token keyword">is</span> <span class="token keyword">not</span> defined<span class="token operator">>></span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-索引错误（IndexError）"><a href="#3-索引错误（IndexError）" class="headerlink" title="3. 索引错误（IndexError）"></a>3. 索引错误（IndexError）</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">asabeneh@Asabeneh<span class="token punctuation">:</span><span class="token operator">~</span>$ pythonPython <span class="token number">3.9</span><span class="token number">.6</span> <span class="token punctuation">(</span>default<span class="token punctuation">,</span> Jun <span class="token number">28</span> <span class="token number">2021</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">[</span>Clang <span class="token number">11.0</span><span class="token number">.0</span> <span class="token punctuation">(</span>clang<span class="token operator">-</span><span class="token number">1100.0</span><span class="token number">.33</span><span class="token number">.8</span><span class="token punctuation">)</span><span class="token punctuation">]</span> on darwinType <span class="token string">"help"</span><span class="token punctuation">,</span> <span class="token string">"copyright"</span><span class="token punctuation">,</span> <span class="token string">"credits"</span> <span class="token keyword">or</span> <span class="token string">"license"</span> <span class="token keyword">for</span> more information<span class="token punctuation">.</span><span class="token operator">>></span><span class="token operator">></span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> numbers<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>  File <span class="token string">"&lt;stdin>"</span><span class="token punctuation">,</span> line <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">></span>IndexError<span class="token punctuation">:</span> <span class="token builtin">list</span> index out of <span class="token builtin">range</span><span class="token operator">>></span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-模块错误（ModuleNotFoundError）"><a href="#4-模块错误（ModuleNotFoundError）" class="headerlink" title="4. 模块错误（ModuleNotFoundError）"></a>4. 模块错误（ModuleNotFoundError）</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">asabeneh@Asabeneh<span class="token punctuation">:</span><span class="token operator">~</span>$ pythonPython <span class="token number">3.9</span><span class="token number">.6</span> <span class="token punctuation">(</span>default<span class="token punctuation">,</span> Jun <span class="token number">28</span> <span class="token number">2021</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">[</span>Clang <span class="token number">11.0</span><span class="token number">.0</span> <span class="token punctuation">(</span>clang<span class="token operator">-</span><span class="token number">1100.0</span><span class="token number">.33</span><span class="token number">.8</span><span class="token punctuation">)</span><span class="token punctuation">]</span> on darwinType <span class="token string">"help"</span><span class="token punctuation">,</span> <span class="token string">"copyright"</span><span class="token punctuation">,</span> <span class="token string">"credits"</span> <span class="token keyword">or</span> <span class="token string">"license"</span> <span class="token keyword">for</span> more information<span class="token punctuation">.</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> mathsTraceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>  File <span class="token string">"&lt;stdin>"</span><span class="token punctuation">,</span> line <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">></span>ModuleNotFoundError<span class="token punctuation">:</span> No module named <span class="token string">'maths'</span><span class="token operator">>></span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-属性错误（AttributeError）"><a href="#5-属性错误（AttributeError）" class="headerlink" title="5. 属性错误（AttributeError）"></a>5. 属性错误（AttributeError）</h3><p>要使用的库或类中没有某个方法或属性时报错</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">asabeneh@Asabeneh<span class="token punctuation">:</span><span class="token operator">~</span>$ pythonPython <span class="token number">3.9</span><span class="token number">.6</span> <span class="token punctuation">(</span>default<span class="token punctuation">,</span> Jun <span class="token number">28</span> <span class="token number">2021</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">[</span>Clang <span class="token number">11.0</span><span class="token number">.0</span> <span class="token punctuation">(</span>clang<span class="token operator">-</span><span class="token number">1100.0</span><span class="token number">.33</span><span class="token number">.8</span><span class="token punctuation">)</span><span class="token punctuation">]</span> on darwinType <span class="token string">"help"</span><span class="token punctuation">,</span> <span class="token string">"copyright"</span><span class="token punctuation">,</span> <span class="token string">"credits"</span> <span class="token keyword">or</span> <span class="token string">"license"</span> <span class="token keyword">for</span> more information<span class="token punctuation">.</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> mathsTraceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>  File <span class="token string">"&lt;stdin>"</span><span class="token punctuation">,</span> line <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">></span>ModuleNotFoundError<span class="token punctuation">:</span> No module named <span class="token string">'maths'</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> math<span class="token operator">>></span><span class="token operator">></span> math<span class="token punctuation">.</span>PITraceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>  File <span class="token string">"&lt;stdin>"</span><span class="token punctuation">,</span> line <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">></span>AttributeError<span class="token punctuation">:</span> module <span class="token string">'math'</span> has no attribute <span class="token string">'PI'</span><span class="token operator">>></span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-键错误（KeyError）"><a href="#6-键错误（KeyError）" class="headerlink" title="6. 键错误（KeyError）"></a>6. 键错误（KeyError）</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">asabeneh@Asabeneh<span class="token punctuation">:</span><span class="token operator">~</span>$ pythonPython <span class="token number">3.9</span><span class="token number">.6</span> <span class="token punctuation">(</span>default<span class="token punctuation">,</span> Jun <span class="token number">28</span> <span class="token number">2021</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">[</span>Clang <span class="token number">11.0</span><span class="token number">.0</span> <span class="token punctuation">(</span>clang<span class="token operator">-</span><span class="token number">1100.0</span><span class="token number">.33</span><span class="token number">.8</span><span class="token punctuation">)</span><span class="token punctuation">]</span> on darwinType <span class="token string">"help"</span><span class="token punctuation">,</span> <span class="token string">"copyright"</span><span class="token punctuation">,</span> <span class="token string">"credits"</span> <span class="token keyword">or</span> <span class="token string">"license"</span> <span class="token keyword">for</span> more information<span class="token punctuation">.</span><span class="token operator">>></span><span class="token operator">></span> users <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'Asab'</span><span class="token punctuation">,</span> <span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">250</span><span class="token punctuation">,</span> <span class="token string">'country'</span><span class="token punctuation">:</span><span class="token string">'Finland'</span><span class="token punctuation">&#125;</span><span class="token operator">>></span><span class="token operator">></span> users<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token string">'Asab'</span><span class="token operator">>></span><span class="token operator">></span> users<span class="token punctuation">[</span><span class="token string">'county'</span><span class="token punctuation">]</span>Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>  File <span class="token string">"&lt;stdin>"</span><span class="token punctuation">,</span> line <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">></span>KeyError<span class="token punctuation">:</span> <span class="token string">'county'</span><span class="token operator">>></span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-类型错误（TypeError）"><a href="#7-类型错误（TypeError）" class="headerlink" title="7. 类型错误（TypeError）"></a>7. 类型错误（TypeError）</h3><p>多种数据类型之间进行处理时易发生的错误</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">asabeneh@Asabeneh<span class="token punctuation">:</span><span class="token operator">~</span>$ pythonPython <span class="token number">3.9</span><span class="token number">.6</span> <span class="token punctuation">(</span>default<span class="token punctuation">,</span> Jun <span class="token number">28</span> <span class="token number">2021</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">[</span>Clang <span class="token number">11.0</span><span class="token number">.0</span> <span class="token punctuation">(</span>clang<span class="token operator">-</span><span class="token number">1100.0</span><span class="token number">.33</span><span class="token number">.8</span><span class="token punctuation">)</span><span class="token punctuation">]</span> on darwinType <span class="token string">"help"</span><span class="token punctuation">,</span> <span class="token string">"copyright"</span><span class="token punctuation">,</span> <span class="token string">"credits"</span> <span class="token keyword">or</span> <span class="token string">"license"</span> <span class="token keyword">for</span> more information<span class="token punctuation">.</span><span class="token operator">>></span><span class="token operator">></span> <span class="token number">4</span> <span class="token operator">+</span> <span class="token string">'3'</span>Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>  File <span class="token string">"&lt;stdin>"</span><span class="token punctuation">,</span> line <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">></span>TypeError<span class="token punctuation">:</span> unsupported operand <span class="token builtin">type</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token keyword">for</span> <span class="token operator">+</span><span class="token punctuation">:</span> <span class="token string">'int'</span> <span class="token keyword">and</span> <span class="token string">'str'</span><span class="token operator">>></span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="8-导入错误（ImportError）"><a href="#8-导入错误（ImportError）" class="headerlink" title="8. 导入错误（ImportError）"></a>8. 导入错误（ImportError）</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">asabeneh@Asabeneh<span class="token punctuation">:</span><span class="token operator">~</span>$ pythonPython <span class="token number">3.9</span><span class="token number">.6</span> <span class="token punctuation">(</span>default<span class="token punctuation">,</span> Jun <span class="token number">28</span> <span class="token number">2021</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">[</span>Clang <span class="token number">11.0</span><span class="token number">.0</span> <span class="token punctuation">(</span>clang<span class="token operator">-</span><span class="token number">1100.0</span><span class="token number">.33</span><span class="token number">.8</span><span class="token punctuation">)</span><span class="token punctuation">]</span> on darwinType <span class="token string">"help"</span><span class="token punctuation">,</span> <span class="token string">"copyright"</span><span class="token punctuation">,</span> <span class="token string">"credits"</span> <span class="token keyword">or</span> <span class="token string">"license"</span> <span class="token keyword">for</span> more information<span class="token punctuation">.</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">from</span> math <span class="token keyword">import</span> powerTraceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>  File <span class="token string">"&lt;stdin>"</span><span class="token punctuation">,</span> line <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">></span>ImportError<span class="token punctuation">:</span> cannot <span class="token keyword">import</span> name <span class="token string">'power'</span> <span class="token keyword">from</span> <span class="token string">'math'</span><span class="token operator">>></span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="9-值错误（ValueError）"><a href="#9-值错误（ValueError）" class="headerlink" title="9. 值错误（ValueError）"></a>9. 值错误（ValueError）</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">asabeneh@Asabeneh<span class="token punctuation">:</span><span class="token operator">~</span>$ pythonPython <span class="token number">3.9</span><span class="token number">.6</span> <span class="token punctuation">(</span>default<span class="token punctuation">,</span> Jun <span class="token number">28</span> <span class="token number">2021</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">[</span>Clang <span class="token number">11.0</span><span class="token number">.0</span> <span class="token punctuation">(</span>clang<span class="token operator">-</span><span class="token number">1100.0</span><span class="token number">.33</span><span class="token number">.8</span><span class="token punctuation">)</span><span class="token punctuation">]</span> on darwinType <span class="token string">"help"</span><span class="token punctuation">,</span> <span class="token string">"copyright"</span><span class="token punctuation">,</span> <span class="token string">"credits"</span> <span class="token keyword">or</span> <span class="token string">"license"</span> <span class="token keyword">for</span> more information<span class="token punctuation">.</span><span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">'12a'</span><span class="token punctuation">)</span>Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>  File <span class="token string">"&lt;stdin>"</span><span class="token punctuation">,</span> line <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">></span>ValueError<span class="token punctuation">:</span> invalid literal <span class="token keyword">for</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">with</span> base <span class="token number">10</span><span class="token punctuation">:</span> <span class="token string">'12a'</span><span class="token operator">>></span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="10-零除法错误（ZeroDivisionError）"><a href="#10-零除法错误（ZeroDivisionError）" class="headerlink" title="10. 零除法错误（ZeroDivisionError）"></a>10. 零除法错误（ZeroDivisionError）</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">asabeneh@Asabeneh<span class="token punctuation">:</span><span class="token operator">~</span>$ pythonPython <span class="token number">3.9</span><span class="token number">.6</span> <span class="token punctuation">(</span>default<span class="token punctuation">,</span> Jun <span class="token number">28</span> <span class="token number">2021</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">[</span>Clang <span class="token number">11.0</span><span class="token number">.0</span> <span class="token punctuation">(</span>clang<span class="token operator">-</span><span class="token number">1100.0</span><span class="token number">.33</span><span class="token number">.8</span><span class="token punctuation">)</span><span class="token punctuation">]</span> on darwinType <span class="token string">"help"</span><span class="token punctuation">,</span> <span class="token string">"copyright"</span><span class="token punctuation">,</span> <span class="token string">"credits"</span> <span class="token keyword">or</span> <span class="token string">"license"</span> <span class="token keyword">for</span> more information<span class="token punctuation">.</span><span class="token operator">>></span><span class="token operator">></span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">0</span>Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>  File <span class="token string">"&lt;stdin>"</span><span class="token punctuation">,</span> line <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">></span>ZeroDivisionError<span class="token punctuation">:</span> division by zero<span class="token operator">>></span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Day16-日期时间处理"><a href="#Day16-日期时间处理" class="headerlink" title="Day16-日期时间处理"></a>Day16-日期时间处理</h2><p>主要使用<code>datetime</code>模块来处理日期和时间</p><h3 id="1-获取日期和时间"><a href="#1-获取日期和时间" class="headerlink" title="1. 获取日期和时间"></a>1. 获取日期和时间</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetimenow <span class="token operator">=</span> datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span>                      <span class="token comment"># 2021-07-08 07:34:46.549883</span>day <span class="token operator">=</span> now<span class="token punctuation">.</span>day                   <span class="token comment"># 8</span>month <span class="token operator">=</span> now<span class="token punctuation">.</span>month               <span class="token comment"># 7</span>year <span class="token operator">=</span> now<span class="token punctuation">.</span>year                 <span class="token comment"># 2021</span>hour <span class="token operator">=</span> now<span class="token punctuation">.</span>hour                 <span class="token comment"># 7</span>minute <span class="token operator">=</span> now<span class="token punctuation">.</span>minute             <span class="token comment"># 38</span>second <span class="token operator">=</span> now<span class="token punctuation">.</span>secondtimestamp <span class="token operator">=</span> now<span class="token punctuation">.</span>timestamp<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>day<span class="token punctuation">,</span> month<span class="token punctuation">,</span> year<span class="token punctuation">,</span> hour<span class="token punctuation">,</span> minute<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'timestamp'</span><span class="token punctuation">,</span> timestamp<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>day<span class="token punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>month<span class="token punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>year<span class="token punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">&#123;</span>hour<span class="token punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">&#123;</span>minute<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>  <span class="token comment"># 8/7/2021, 7:38</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-格式化日期输出"><a href="#2-格式化日期输出" class="headerlink" title="2. 格式化日期输出"></a>2. 格式化日期输出</h3><p>使用<code>strftime</code>方法</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime<span class="token comment"># current date and time</span>now <span class="token operator">=</span> datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>t <span class="token operator">=</span> now<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%H:%M:%S"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"time:"</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span>time_one <span class="token operator">=</span> now<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%m/%d/%Y, %H:%M:%S"</span><span class="token punctuation">)</span><span class="token comment"># mm/dd/YY H:M:S format</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"time one:"</span><span class="token punctuation">,</span> time_one<span class="token punctuation">)</span>time_two <span class="token operator">=</span> now<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%d/%m/%Y, %H:%M:%S"</span><span class="token punctuation">)</span><span class="token comment"># dd/mm/YY H:M:S format</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"time two:"</span><span class="token punctuation">,</span> time_two<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">%y 两位数的年份表示（00-99）%Y 四位数的年份表示（000-9999）%m 月份（01-12）%d 月内中的一天（0-31）%H 24小时制小时数（0-23）%I 12小时制小时数（01-12）%M 分钟数（00-59）%S 秒（00-59）%a 本地简化星期名称%A 本地完整星期名称%b 本地简化的月份名称%B 本地完整的月份名称%c 本地相应的日期表示和时间表示%j 年内的一天（001-366）%p 本地A.M.或P.M.的等价符%U 一年中的星期数（00-53）星期天为星期的开始%w 星期（0-6），星期天为 0，星期一为 1，以此类推。%W 一年中的星期数（00-53）星期一为星期的开始%x 本地相应的日期表示%X 本地相应的时间表示%Z 当前时区的名称%% %号本身<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-字符串转时间数据"><a href="#3-字符串转时间数据" class="headerlink" title="3. 字符串转时间数据"></a>3. 字符串转时间数据</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetimedate_string <span class="token operator">=</span> <span class="token string">"5 December, 2019"</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"date_string ="</span><span class="token punctuation">,</span> date_string<span class="token punctuation">)</span>date_object <span class="token operator">=</span> datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>date_string<span class="token punctuation">,</span> <span class="token string">"%d %B, %Y"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"date_object ="</span><span class="token punctuation">,</span> date_object<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-时间参数转时间数据类型"><a href="#4-时间参数转时间数据类型" class="headerlink" title="4. 时间参数转时间数据类型"></a>4. 时间参数转时间数据类型</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> datetime <span class="token keyword">import</span> dated <span class="token operator">=</span> date<span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="5-表示时间的时间对象"><a href="#5-表示时间的时间对象" class="headerlink" title="5. 表示时间的时间对象"></a>5. 表示时间的时间对象</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> datetime <span class="token keyword">import</span> time<span class="token comment"># time(hour = 0, minute = 0, second = 0)</span>a <span class="token operator">=</span> time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a ="</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token comment"># time(hour, minute and second)</span>b <span class="token operator">=</span> time<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"b ="</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token comment"># time(hour, minute and second)</span>c <span class="token operator">=</span> time<span class="token punctuation">(</span>hour<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> minute<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span> second<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"c ="</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token comment"># time(hour, minute, second, microsecond)</span>d <span class="token operator">=</span> time<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">200555</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"d ="</span><span class="token punctuation">,</span> d<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-时间差"><a href="#6-时间差" class="headerlink" title="6. 时间差"></a>6. 时间差</h3><ol><li><p>date类型直接相减</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> datetime<span class="token keyword">from</span> datetime <span class="token keyword">import</span> date<span class="token punctuation">,</span>datetimetoday <span class="token operator">=</span> date<span class="token punctuation">(</span>year<span class="token operator">=</span><span class="token number">2019</span><span class="token punctuation">,</span> month<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span> day<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>new_year <span class="token operator">=</span> date<span class="token punctuation">(</span>year<span class="token operator">=</span><span class="token number">2020</span><span class="token punctuation">,</span> month<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> day<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>time_left_for_newyear <span class="token operator">=</span> new_year <span class="token operator">-</span> today<span class="token comment"># Time left for new year:  27 days, 0:00:00</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Time left for new year: '</span><span class="token punctuation">,</span> time_left_for_newyear<span class="token punctuation">)</span>t1 <span class="token operator">=</span> datetime<span class="token punctuation">(</span>year<span class="token operator">=</span><span class="token number">2019</span><span class="token punctuation">,</span> month<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span> day<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> hour<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> minute<span class="token operator">=</span><span class="token number">59</span><span class="token punctuation">,</span> second<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>t2 <span class="token operator">=</span> datetime<span class="token punctuation">(</span>year<span class="token operator">=</span><span class="token number">2020</span><span class="token punctuation">,</span> month<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> day<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> hour<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> minute<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> second<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>diff <span class="token operator">=</span> t2 <span class="token operator">-</span> t1<span class="token comment"># Time left for new year: 26 days, 23: 01: 00</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Time left for new year:'</span><span class="token punctuation">,</span> diff<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>timedelata</code>计算时间差</p><p>timedelata将时间进行数据格式转换</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> datetime <span class="token keyword">import</span> timedeltat1 <span class="token operator">=</span> timedelta<span class="token punctuation">(</span>weeks<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span> days<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> hours<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> seconds<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>t2 <span class="token operator">=</span> timedelta<span class="token punctuation">(</span>days<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">,</span> hours<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> minutes<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> seconds<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>t3 <span class="token operator">=</span> t1 <span class="token operator">-</span> t2<span class="token keyword">print</span><span class="token punctuation">(</span>t1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>t2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"t3 ="</span><span class="token punctuation">,</span> t3<span class="token punctuation">)</span><span class="token comment">#output</span><span class="token number">94</span> days<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">:</span><span class="token number">00</span><span class="token punctuation">:</span><span class="token number">20</span><span class="token number">7</span> days<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">:</span><span class="token number">03</span><span class="token punctuation">:</span><span class="token number">30</span>t3 <span class="token operator">=</span> <span class="token number">86</span> days<span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">:</span><span class="token number">56</span><span class="token punctuation">:</span><span class="token number">50</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="Day17-异常处理"><a href="#Day17-异常处理" class="headerlink" title="Day17-异常处理"></a>Day17-异常处理</h2><h3 id="1-异常处理"><a href="#1-异常处理" class="headerlink" title="1. 异常处理"></a>1. 异常处理</h3><p><img src="https://gitee.com/t_d_l_h/blogimages/raw/master/img/17.png"></p><ol><li><p>单个异常</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">try</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">+</span> <span class="token string">'5'</span><span class="token punctuation">)</span><span class="token keyword">except</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Something went wrong'</span><span class="token punctuation">)</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'Enter your name:'</span><span class="token punctuation">)</span>    year_born <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'Year you were born:'</span><span class="token punctuation">)</span>    age <span class="token operator">=</span> <span class="token number">2019</span> <span class="token operator">-</span> year_born    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'You are </span><span class="token interpolation"><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span></span><span class="token string">. And your age is </span><span class="token interpolation"><span class="token punctuation">&#123;</span>age<span class="token punctuation">&#125;</span></span><span class="token string">.'</span></span><span class="token punctuation">)</span><span class="token keyword">except</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Something went wrong'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>多个异常</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">try</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'Enter your name:'</span><span class="token punctuation">)</span>    year_born <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'Year you were born:'</span><span class="token punctuation">)</span>    age <span class="token operator">=</span> <span class="token number">2019</span> <span class="token operator">-</span> year_born    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'You are </span><span class="token interpolation"><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span></span><span class="token string">. And your age is </span><span class="token interpolation"><span class="token punctuation">&#123;</span>age<span class="token punctuation">&#125;</span></span><span class="token string">.'</span></span><span class="token punctuation">)</span><span class="token keyword">except</span> TypeError<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Type error occured'</span><span class="token punctuation">)</span><span class="token keyword">except</span> ValueError<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Value error occured'</span><span class="token punctuation">)</span><span class="token keyword">except</span> ZeroDivisionError<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'zero division error occured'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>异常后续处理</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">try</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'Enter your name:'</span><span class="token punctuation">)</span>    year_born <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'Year you born:'</span><span class="token punctuation">)</span>    age <span class="token operator">=</span> <span class="token number">2019</span> <span class="token operator">-</span> <span class="token builtin">int</span><span class="token punctuation">(</span>year_born<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'You are &#123;name&#125;. And your age is &#123;age&#125;.'</span><span class="token punctuation">)</span><span class="token keyword">except</span> TypeError<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Type error occur'</span><span class="token punctuation">)</span><span class="token keyword">except</span> ValueError<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Value error occur'</span><span class="token punctuation">)</span><span class="token keyword">except</span> ZeroDivisionError<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'zero division error occur'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'I usually run with the try block'</span><span class="token punctuation">)</span><span class="token keyword">finally</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'I alway run.'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>不指明具体异常类型，全部捕获，后续输出</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">try</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'Enter your name:'</span><span class="token punctuation">)</span>    year_born <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'Year you born:'</span><span class="token punctuation">)</span>    age <span class="token operator">=</span> <span class="token number">2019</span> <span class="token operator">-</span> <span class="token builtin">int</span><span class="token punctuation">(</span>year_born<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'You are &#123;name&#125;. And your age is &#123;age&#125;.'</span><span class="token punctuation">)</span><span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="2-打包和解包参数"><a href="#2-打包和解包参数" class="headerlink" title="2. 打包和解包参数"></a>2. 打包和解包参数</h3><p>* 对于元组</p><p>** 对于字典</p><ol><li><p>解包</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">sum_of_five_nums</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> a <span class="token operator">+</span> b <span class="token operator">+</span> c <span class="token operator">+</span> d <span class="token operator">+</span> elst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>sum_of_five_nums<span class="token punctuation">(</span><span class="token operator">*</span>lst<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 15</span><span class="token comment">#*作用将列表解压出里面的元素</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">numbers <span class="token operator">=</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>  <span class="token comment"># normal call with separate arguments</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># [2, 3, 4, 5, 6]</span>args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span>numbers <span class="token operator">=</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span>  <span class="token comment"># call with arguments unpacked from a list</span><span class="token keyword">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>      <span class="token comment"># [2, 3, 4, 5,6]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">countries <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Finland'</span><span class="token punctuation">,</span> <span class="token string">'Sweden'</span><span class="token punctuation">,</span> <span class="token string">'Norway'</span><span class="token punctuation">,</span> <span class="token string">'Denmark'</span><span class="token punctuation">,</span> <span class="token string">'Iceland'</span><span class="token punctuation">]</span>fin<span class="token punctuation">,</span> sw<span class="token punctuation">,</span> nor<span class="token punctuation">,</span> <span class="token operator">*</span>rest <span class="token operator">=</span> countries<span class="token keyword">print</span><span class="token punctuation">(</span>fin<span class="token punctuation">,</span> sw<span class="token punctuation">,</span> nor<span class="token punctuation">,</span> rest<span class="token punctuation">)</span>   <span class="token comment"># Finland Sweden Norway ['Denmark', 'Iceland']</span>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span>one<span class="token punctuation">,</span> <span class="token operator">*</span>middle<span class="token punctuation">,</span> last <span class="token operator">=</span> numbers<span class="token keyword">print</span><span class="token punctuation">(</span>one<span class="token punctuation">,</span> middle<span class="token punctuation">,</span> last<span class="token punctuation">)</span>      <span class="token comment">#  1 [2, 3, 4, 5, 6] 7</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">unpacking_person_info</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> country<span class="token punctuation">,</span> city<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span></span><span class="token string"> lives in </span><span class="token interpolation"><span class="token punctuation">&#123;</span>country<span class="token punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">&#123;</span>city<span class="token punctuation">&#125;</span></span><span class="token string">. He is </span><span class="token interpolation"><span class="token punctuation">&#123;</span>age<span class="token punctuation">&#125;</span></span><span class="token string"> year old.'</span></span>dct <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'Asabeneh'</span><span class="token punctuation">,</span> <span class="token string">'country'</span><span class="token punctuation">:</span> <span class="token string">'Finland'</span><span class="token punctuation">,</span> <span class="token string">'city'</span><span class="token punctuation">:</span> <span class="token string">'Helsinki'</span><span class="token punctuation">,</span> <span class="token string">'age'</span><span class="token punctuation">:</span> <span class="token number">250</span><span class="token punctuation">&#125;</span><span class="token comment"># Asabeneh lives in Finland, Helsinki. He is 250 years old.</span><span class="token keyword">print</span><span class="token punctuation">(</span>unpacking_person_info<span class="token punctuation">(</span><span class="token operator">**</span>dct<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>打包</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">sum_all</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>    s <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> args<span class="token punctuation">:</span>        s <span class="token operator">+=</span> i    <span class="token keyword">return</span> s<span class="token keyword">print</span><span class="token punctuation">(</span>sum_all<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>             <span class="token comment"># 6</span><span class="token keyword">print</span><span class="token punctuation">(</span>sum_all<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 28</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#打包字典</span><span class="token keyword">def</span> <span class="token function">packing_person_info</span><span class="token punctuation">(</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># check the type of kwargs and it is a dict type</span>    <span class="token comment"># print(type(kwargs))</span>    <span class="token comment"># Printing dictionary items</span>    <span class="token keyword">for</span> key <span class="token keyword">in</span> kwargs<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>key<span class="token punctuation">&#125;</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>kwargs<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>    <span class="token keyword">return</span> kwargs<span class="token keyword">print</span><span class="token punctuation">(</span>packing_person_info<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"Asabeneh"</span><span class="token punctuation">,</span>                          country<span class="token operator">=</span><span class="token string">"Finland"</span><span class="token punctuation">,</span> city<span class="token operator">=</span><span class="token string">"Helsinki"</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>通过解包链接列表</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">lst_one <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>lst_two <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">*</span>lst_one<span class="token punctuation">,</span><span class="token operator">*</span>lst_two<span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span>  <span class="token comment"># [0, 1, 2, 3, 4, 5, 6, 7]</span>country_lst_one <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Finland'</span><span class="token punctuation">,</span> <span class="token string">'Sweden'</span><span class="token punctuation">,</span> <span class="token string">'Norway'</span><span class="token punctuation">]</span>country_lst_two <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Denmark'</span><span class="token punctuation">,</span> <span class="token string">'Iceland'</span><span class="token punctuation">]</span>nordic_countries <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">*</span>country_lst_one<span class="token punctuation">,</span> <span class="token operator">*</span>country_lst_two<span class="token punctuation">]</span><span class="token comment"># ['Finland', 'Sweden', 'Norway', 'Denmark', 'Iceland']</span><span class="token keyword">print</span><span class="token punctuation">(</span>nordic_countries<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>枚举<code>enumerate</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> index<span class="token punctuation">,</span> item <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> item<span class="token punctuation">)</span>    <span class="token keyword">for</span> index<span class="token punctuation">,</span> i <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>countries<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'hi'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token string">'Finland'</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'The country &#123;i&#125; has been found at index &#123;index&#125;'</span><span class="token punctuation">)</span><span class="token comment">#返回索引和对应的值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>压缩<code>zip</code></p><p>将两个列表内容进行一对一绑定</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'e'</span><span class="token punctuation">,</span> <span class="token string">'f'</span><span class="token punctuation">]</span>s <span class="token operator">=</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>z <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i<span class="token punctuation">,</span> j <span class="token keyword">in</span> s<span class="token punctuation">:</span>    z<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"a中："</span><span class="token punctuation">:</span> i<span class="token punctuation">,</span> <span class="token string">"b中："</span><span class="token punctuation">:</span> j<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token comment">#output</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token string">'a中：'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'b中：'</span><span class="token punctuation">:</span> <span class="token string">'a'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'a中：'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'b中：'</span><span class="token punctuation">:</span> <span class="token string">'b'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'a中：'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'b中：'</span><span class="token punctuation">:</span> <span class="token string">'c'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'a中：'</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">'b中：'</span><span class="token punctuation">:</span> <span class="token string">'d'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'a中：'</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">'b中：'</span><span class="token punctuation">:</span> <span class="token string">'e'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'a中：'</span><span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">'b中：'</span><span class="token punctuation">:</span> <span class="token string">'f'</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习</title>
      <link href="/2022/01/09/java-jian-jie/"/>
      <url>/2022/01/09/java-jian-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="一、Java发展史"><a href="#一、Java发展史" class="headerlink" title="一、Java发展史"></a>一、Java发展史</h1><p>开始流行起源于Applet</p><h3 id="1-分类"><a href="#1-分类" class="headerlink" title="1. 分类"></a>1. 分类</h3><ul><li>JavaSE  标准版（桌面程序，控制台开发）</li><li>JavaME 嵌入式开发（手机，小家电） ****</li><li>JavaEE  企业级开发（web端，服务器开发）</li></ul><h3 id="2-三高"><a href="#2-三高" class="headerlink" title="2. 三高"></a>2. 三高</h3><ol><li>高可用</li><li>高性能</li><li>高并发</li></ol><h1 id="二、特性和优势"><a href="#二、特性和优势" class="headerlink" title="二、特性和优势"></a>二、特性和优势</h1><p>可移植性：write once run anywhere</p><p>面向对象</p><p>分布式</p><p>动态性（通过反射）</p><p>多线程</p><h1 id="三、JDK-JRE-JVM"><a href="#三、JDK-JRE-JVM" class="headerlink" title="三、JDK,JRE,JVM"></a>三、JDK,JRE,JVM</h1><p>JDK：Java Development Kit(Java开发者工具)</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/12/05/hello-world/"/>
      <url>/2021/12/05/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>bwapp靶场通关（持续更新）</title>
      <link href="/2021/12/05/bwapp-ba-chang-tong-guan-ji-lu/"/>
      <url>/2021/12/05/bwapp-ba-chang-tong-guan-ji-lu/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h2 id="A1-Injection"><a href="#A1-Injection" class="headerlink" title="/ A1 - Injection /"></a>/ A1 - Injection /</h2><h3 id="HTML-Injection-Reflected-GET"><a href="#HTML-Injection-Reflected-GET" class="headerlink" title="HTML Injection - Reflected (GET)"></a>HTML Injection - Reflected (GET)</h3>]]></content>
      
      
      <categories>
          
          <category> 靶场 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -bwapp靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker学习</title>
      <link href="/2021/08/10/docker-xue-xi/"/>
      <url>/2021/08/10/docker-xue-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="一、容器与镜像"><a href="#一、容器与镜像" class="headerlink" title="一、容器与镜像"></a>一、容器与镜像</h1><p>容器：包括能够修改镜像的模块和镜像</p><h1 id="二、基本命令："><a href="#二、基本命令：" class="headerlink" title="二、基本命令："></a>二、基本命令：</h1><blockquote><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">docker container run &lt;容器名字&gt;   创建容器<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">docker container ls     显示当前存在的容器(运行中)docker container ls -a  显示所有容器(包括停止的)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><table><thead><tr><th>container id</th><th>image</th><th>command</th><th>created</th><th>status</th><th>ports</th><th>names</th></tr></thead><tbody><tr><td>容器对应id，唯一值</td><td>使用的镜像名称</td><td>执行的相关命令</td><td>创建的时间</td><td>当前镜像状态</td><td>协议和端口</td><td>容器名称</td></tr></tbody></table><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">docker container stop &lt;name or id&gt;    停止容器<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">docker container rm &lt;name or id&gt;   删除容器<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> 以上命令均可简写</p><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">docker lsdocker ls -adocker run xxxdocker stop xxxdocker rm xxx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h1 id="三、多容器操作"><a href="#三、多容器操作" class="headerlink" title="三、多容器操作"></a>三、多容器操作</h1><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">docker container stop $(docker container ps -a -q)  停止运行多个容器<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">docker  rm $(docker ps -a -q)          删除所有容器<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">docker rmi $(docker images -q)        删除所有镜像<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">docker container rm xxx -f     强制删除正在运行的容器<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="四、两种运行模式"><a href="#四、两种运行模式" class="headerlink" title="四、两种运行模式"></a>四、两种运行模式</h1><ol><li><p>前台运行：在终端显示运行过程和日志，关闭终端服务停止</p></li><li><p>后台运行：加入-d 参数，</p></li><li><p>后台变前台：</p><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">docker attach xxx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>后台服务模式查看日志</p><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">docker container logs -f    跟踪日志<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h1 id="五、交互模式"><a href="#五、交互模式" class="headerlink" title="五、交互模式"></a>五、交互模式</h1><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">docker container run -it xxx sh    -it:交互模式,-sh:使用shell脚本<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这种方法缺点，退出交互模式容器也会停止</p><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">docker container run -d -p 80:80 xxxdocker exec -it xxx sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>先进入后台模式，在启动交互模式，这样退出交互时容器不会停止</p><h1 id="六、下载镜像"><a href="#六、下载镜像" class="headerlink" title="六、下载镜像"></a>六、下载镜像</h1><p>docker hub</p><p>Dockerfile</p><p>自有文件导入</p><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">docker image pull xxx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="七、查看详细镜像信息"><a href="#七、查看详细镜像信息" class="headerlink" title="七、查看详细镜像信息"></a>七、查看详细镜像信息</h1><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">docker image inspect xxx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">docker image rm  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python生成器中的yield和send理解</title>
      <link href="/2021/05/17/python-sheng-cheng-qi-zhong-de-yield-he-send-li-jie/"/>
      <url>/2021/05/17/python-sheng-cheng-qi-zhong-de-yield-he-send-li-jie/</url>
      
        <content type="html"><![CDATA[<p><strong>《因为在使用Mriai编写机器人脚本，需要学习python生成器的内容，特此记录》</strong></p><blockquote><p>使用了yield关键字的函数称为生成器函数。</p></blockquote><p>yield的作用是在执行到该关键字时，就会返回到调用这个函数语句的位置，继续执行后续代码，直到后续出现类似send的函数，返回到之前yield关键字的位置，将send里面的参数传递到接收yield的变量</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 生成器函数</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"ok1"</span><span class="token punctuation">)</span>    x <span class="token operator">=</span> <span class="token number">10</span>  <span class="token comment"># 函数内局部变量x赋值为10</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    x <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token number">1</span>  <span class="token comment"># 这里就是send函数的关键</span>    <span class="token comment"># 之前我们创建的生成器，yield左边都是没有值（我现在不是很确定这里是不是应该叫做返回值，那就先用值代替）。</span>    <span class="token comment"># 现在我们的x会接收到一个值，这个值是什么，从哪里来的？我们继续看下去</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token keyword">yield</span> x  <span class="token comment"># 这里试第二个断点</span>f1 <span class="token operator">=</span> func1<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 获取生成器对象</span>ret1 <span class="token operator">=</span> <span class="token builtin">next</span><span class="token punctuation">(</span>f1<span class="token punctuation">)</span>  <span class="token comment"># 运行到第一个yield</span><span class="token comment"># ret1 = f1.send(None) #（这一句语句需要全部看完回头再看）当第一次执行生成器的时候，他并没有执行到yield这个位置，所以你一点传值，就会出现问题</span><span class="token comment"># 谁去接收？没有对象接收就会报错，所以第一次如果一定要用send去调用，那就传一个None</span><span class="token keyword">print</span><span class="token punctuation">(</span>ret1<span class="token punctuation">)</span>  <span class="token comment"># 打印第一个yield返回的值</span>ret2 <span class="token operator">=</span> f1<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'eee'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ret2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对exp,poc,payload,shellcode的两个理解</title>
      <link href="/2021/04/19/dui-exp-poc-payload-shellcode-de-liang-ge-li-jie/"/>
      <url>/2021/04/19/dui-exp-poc-payload-shellcode-de-liang-ge-li-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="第一种理解"><a href="#第一种理解" class="headerlink" title="第一种理解"></a>第一种理解</h1><ul><li><h3 id="从总体上理解"><a href="#从总体上理解" class="headerlink" title="从总体上理解"></a>从总体上理解</h3></li></ul><blockquote><p>通过理解答主的回答，以下是我的理解<a href="https://www.zhihu.com/question/39878368?sort=created">https://www.zhihu.com/question/39878368?sort=created</a></p><p>payload：是对漏洞进行攻击行为的代码中执行主要攻击任务的代码部分</p><p>shellcode：验证漏洞存在与否的输入+执行攻击命令的主要代码(payload)</p><p>exp：整个验证加攻击行为的过程</p><p>poc：详细记录攻击的过程和shellcode的代码内容，最后形成的技术文档一样的东西</p></blockquote><h1 id="第二种理解"><a href="#第二种理解" class="headerlink" title="第二种理解"></a>第二种理解</h1><ul><li><h3 id="从小的视角理解"><a href="#从小的视角理解" class="headerlink" title="从小的视角理解"></a>从小的视角理解</h3></li></ul><blockquote><p>payload：在获得目标机器的权限后，进行进一步渗透操作，可以说是内网渗透的范畴</p><p>shellcode：payload中的一种攻击方法，常说正向shell，反向shell等</p><p>poc：验证漏洞是否存在的代码或程序</p><p>exp：对目标机器的漏洞进行攻击，并成功执行攻击代码,并获得目标机器权限</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 名词理解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>命令执行相关学习</title>
      <link href="/2021/03/16/ming-ling-zhi-xing-xiang-guan-zhi-shi-dian/"/>
      <url>/2021/03/16/ming-ling-zhi-xing-xiang-guan-zhi-shi-dian/</url>
      
        <content type="html"><![CDATA[<h1 id="命令执行相关学习"><a href="#命令执行相关学习" class="headerlink" title="命令执行相关学习"></a>命令执行相关学习</h1><p><a href="https://xz.aliyun.com/t/2741">https://xz.aliyun.com/t/2741</a></p><p>命令执行：调用操作系统命令进行执行</p><p>远程代码执行：</p><p>调用服务器网站代码进行执行</p><p>常见的命令执行函数：</p><blockquote><p>system()</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令执行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux学习</title>
      <link href="/2021/03/15/linux-xue-xi/"/>
      <url>/2021/03/15/linux-xue-xi/</url>
      
        <content type="html"><![CDATA[<ol><li><h5 id="使用分号可以输入和执行多条命令"><a href="#使用分号可以输入和执行多条命令" class="headerlink" title="使用分号可以输入和执行多条命令"></a>使用分号可以输入和执行多条命令</h5><p>如   </p><p><img src="https://raw.githubusercontent.com/tyfhxn/blog_images/main/img/20210315223643.png"></p></li><li><h5 id="linux文件名最长可允许255个字符"><a href="#linux文件名最长可允许255个字符" class="headerlink" title="linux文件名最长可允许255个字符"></a>linux文件名最长可允许255个字符</h5></li><li><h5 id="Linux没有拓展名概念"><a href="#Linux没有拓展名概念" class="headerlink" title="Linux没有拓展名概念"></a>Linux没有拓展名概念</h5></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>对文件上传代码片段的猜测理解（php未学）</title>
      <link href="/2021/03/15/dui-wen-jian-shang-chuan-dai-ma-de-li-jie/"/>
      <url>/2021/03/15/dui-wen-jian-shang-chuan-dai-ma-de-li-jie/</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/tyfhxn/blog_images/main/img/20210315152125.png">对该处的代码我理解为，函数将在temp临时文件内的数据通过函数转移到了新的文件中，传输过程传的是数据，所以最终显示的文件名是目录名而不是新建一个文件</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql注入使用union select时不回显数字的理解</title>
      <link href="/2021/03/15/sql-zhu-ru-shi-yong-union-select-shi-bu-hui-xian-shu-zi-de-li-jie/"/>
      <url>/2021/03/15/sql-zhu-ru-shi-yong-union-select-shi-bu-hui-xian-shu-zi-de-li-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="当我们使用union-select-1-2-3-4时，经常会出现当前页面并没有发生变化的情况，我用自己的理解来解释一下这个情况"><a href="#当我们使用union-select-1-2-3-4时，经常会出现当前页面并没有发生变化的情况，我用自己的理解来解释一下这个情况" class="headerlink" title="当我们使用union select 1,2,3,4时，经常会出现当前页面并没有发生变化的情况，我用自己的理解来解释一下这个情况"></a>当我们使用union select 1,2,3,4时，经常会出现当前页面并没有发生变化的情况，我用自己的理解来解释一下这个情况</h1><blockquote><h3 id="首先看一下不回显的状况以及解决方法"><a href="#首先看一下不回显的状况以及解决方法" class="headerlink" title="首先看一下不回显的状况以及解决方法"></a>首先看一下不回显的状况以及解决方法</h3><p><img src="https://raw.githubusercontent.com/tyfhxn/blog_images/main/img/20210315155919.png"></p><p><img src="https://raw.githubusercontent.com/tyfhxn/blog_images/main/img/20210315155930.png"></p></blockquote><blockquote><h3 id="再看直接回显的状态"><a href="#再看直接回显的状态" class="headerlink" title="再看直接回显的状态"></a>再看直接回显的状态</h3><p><img src="https://raw.githubusercontent.com/tyfhxn/blog_images/main/img/20210315160009.png"></p></blockquote><p>综合以上我们可以得出，有时候存在回显，但因为当前页面只能显示一部分数据，所以回显的数据被原先存在的数据挡住，无法显示。</p><p>解决方法：让之前的查询语句为错，查不到数据，所以位置就空出来了，这样union select 查询到的数据就可以显示出来了</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql注入\ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>各方面小知识点汇总</title>
      <link href="/2021/02/28/xiao-zhi-shi-dian-hui-zong/"/>
      <url>/2021/02/28/xiao-zhi-shi-dian-hui-zong/</url>
      
        <content type="html"><![CDATA[<h1 id="小知识点汇总"><a href="#小知识点汇总" class="headerlink" title="小知识点汇总"></a>小知识点汇总</h1><h3 id="Nginx将404转发至index-php"><a href="#Nginx将404转发至index-php" class="headerlink" title="==Nginx将404转发至index.php=="></a>==Nginx将404转发至index.php==</h3><p><img src="https://raw.githubusercontent.com/tyfhxn/blog_images/main/img/20210315152002.png"></p><p><img src="https://raw.githubusercontent.com/tyfhxn/blog_images/main/img/20210315152011.png"></p><p>第一张图就是进行转发的状态</p><blockquote><p>即在url后面加入任意字符，页面自动跳转至指定页面，不会出现404报错</p></blockquote><p>第二张就是没有进行转发的</p><hr>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql注入中order by的理解</title>
      <link href="/2021/02/27/sql-zhu-ru-zhong-order-by-de-li-jie/"/>
      <url>/2021/02/27/sql-zhu-ru-zhong-order-by-de-li-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="order-by-的作用是排序"><a href="#order-by-的作用是排序" class="headerlink" title="order by 的作用是排序"></a>order by 的作用是排序</h2><ul><li>order by 默认的是升序， asc 升序 desc 降序</li></ul><blockquote><p>实际演示一下：</p><p><img src="https://raw.githubusercontent.com/tyfhxn/blog_images/main/img/20210315151810.jpg"></p><p>这是一张数据表，接下来使用sql语句进行操作</p></blockquote><blockquote><p>查询表中所有内容：</p><p>SELECT * FROM twe</p><p><img src="https://raw.githubusercontent.com/tyfhxn/blog_images/main/img/20210315151847.jpg"></p><p><strong>可以看到此时的记录排列，接下来使用order by进行排序</strong></p><p><img src="https://raw.githubusercontent.com/tyfhxn/blog_images/main/img/20210315151913.png"></p><p>可以看到查询出来的结果会有差别这个结果就是因为按照不同字段排序所导致的</p><p><img src="https://raw.githubusercontent.com/tyfhxn/blog_images/main/img/20210315151922.png"></p><p>当结果不存在时会返回为空</p></blockquote><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>在sql注入时，通过order by判断字段数时，一定要先使前面的查询语句进行闭合，因为order by是对查询结果进行的一个排序，不管结果有没有，一定要使查询能够完整进行后才可以使用order by</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
